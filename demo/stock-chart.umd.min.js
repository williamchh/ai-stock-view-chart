!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?module.exports=i():"function"==typeof define&&define.amd?define(i):(t="undefined"!=typeof globalThis?globalThis:t||self).StockChart=i()}(this,function(){"use strict";const t={name:"light",background:"#FFFFFF",chartAreaBackground:"#F8F8F8",gridColor:"#E0E0E0",textColor:"#333333",candleUp:"#4CAF50",candleDown:"#F44336",candleBorderColor:"#333333",lineColor:"#2196F3",crosshairColor:"#9E9E9E",overlayTextColor:"#333333",positiveColor:"rgba(76, 175, 80, 0.8)",negativeColor:"rgba(244, 67, 54, 0.8)"},i={name:"dark",background:"#1A1A1A",chartAreaBackground:"#2C2C2C",gridColor:"#444444",textColor:"#E0E0E0",candleUp:"#66BB6A",candleDown:"#EF5350",candleBorderColor:"#E0E0E0",lineColor:"#64B5F6",crosshairColor:"#BDBDBD",overlayTextColor:"#E0E0E0",positiveColor:"rgba(102, 187, 106, 0.8)",negativeColor:"rgba(239, 83, 80, 0.8)",borderColorUseBodyColor:!0};class s{plotTotalHeight;plotTotalWidth;yAxisWidth=80;bottomMargin=40;leftMargin=0;topMargin=0;constructor(t,i,s){this.canvasWidth=t,this.canvasHeight=i,this.plotConfigs=s,this.plots={},this.calculateLayout()}calculateLayout(){let t=0;const i=this.plotConfigs.filter(t=>!t.overlay).reduce((t,i)=>t+i.heightRatio,0);this.plotConfigs.forEach(s=>{if(s.overlay){const t=this.plots.main;t&&(this.plots[s.id]={...t})}else{const e=this.canvasWidth-this.leftMargin-this.yAxisWidth,n=this.canvasHeight-this.topMargin-this.bottomMargin,h=s.heightRatio/i*n;this.plots[s.id]={x:this.leftMargin,y:t+this.topMargin,width:e,height:h},t+=h}}),this.plotTotalHeight=t,this.plotTotalWidth=this.canvasWidth-this.yAxisWidth}getPlotLayout(t){return this.plots[t]||null}updatePlotIndicator(t,i){"delete"===i&&(this.plotConfigs=this.plotConfigs.filter(i=>!i.indicator||i.indicator.id!==t.id&&i.targetId!==t.targetId)),this.calculateLayout()}updateCanvasDimensions(t,i,s=void 0){this.canvasWidth=t,this.canvasHeight=i,void 0!==s&&(this.yAxisWidth=s),this.calculateLayout()}getPlotTotalWidth(){return this.plotTotalWidth}getPlotTotalHeight(){return this.plotTotalHeight}updatePlotConfigurations(t){this.plotConfigs=t,this.calculateLayout()}}class e{constructor(t,i,s=0){this.allData=t,this.visibleCount=Math.min(i,t.length+s),this.rightPadding=s,this.maxStartIndex=Math.max(0,t.length-this.visibleCount+s),this.startIndex=Math.max(0,t.length-(this.visibleCount-s))}MIN_PORT_VISIBLE_COUNT=10;getVisibleData(){const t=Math.min(this.startIndex+this.visibleCount,this.allData.length);return this.allData.slice(this.startIndex,t)}getVisibleStartEndTime(){const t=this.getVisibleData();return t&&0!==t.length?{startTime:t[0].time,endTime:t[t.length-1].time}:null}scroll(t){this.maxStartIndex=this.allData.length-this.visibleCount+this.rightPadding;const i=this.startIndex+t,s=Math.min(Math.round(.1*this.visibleCount),Math.round(.1*this.allData.length)),e=this.maxStartIndex+s;this.startIndex=Math.max(0,Math.min(e,i))}zoom(t,i){if(t<1&&this.startIndex<=0&&(window.dispatchEvent(new CustomEvent("requestOlderData",{detail:{currentOldestDataTime:this.allData[0]?.time,requestedCount:Math.round(.5*this.visibleCount),zoomFactor:t,anchorIndex:i}})),0===this.startIndex))return;const s=this.startIndex+i;let e=t;Math.round(this.visibleCount/t)>200&&t<.99&&(e*=.99);const n=Math.max(this.MIN_PORT_VISIBLE_COUNT,Math.min(this.allData.length,Math.round(this.visibleCount/e))),h=i/this.visibleCount,o=s-Math.round(n*h);this.visibleCount=n,this.maxStartIndex=Math.max(0,this.allData.length-this.visibleCount);const a=Math.round(.05*this.visibleCount),l=Math.max(-a,0),r=this.maxStartIndex+a;this.startIndex=Math.max(l,Math.min(r,o)),this.startIndex<=l&&t<1&&window.dispatchEvent(new CustomEvent("requestOlderData",{detail:{currentOldestDataTime:this.allData[0]?.time,requestedCount:Math.round(.5*this.visibleCount)}}))}updateData(t){this.allData=t,this.startIndex=Math.max(0,this.allData.length-this.visibleCount)}}function n(t,i,s,e,n){return(t-i)*n}function h(t,i,s,e,n){const h=s-i;return 0===h?n+e/2:n+e-(t-i)/h*e}function o(t){return{period:t,count:0,initialSum:0,ema:null,lastValue:null}}function a(t,i,s=!1){const e={...i};if(s&&null!==e.ema&&null!==e.lastValue){const i=2/(e.period+1),s=(e.ema-e.lastValue*i)/(1-i);e.ema=t*i+s*(1-i),e.lastValue=t}else if(!s){if(e.count<e.period)e.initialSum+=t,e.count++,e.count===e.period&&(e.ema=e.initialSum/e.period);else{const i=2/(e.period+1);e.ema=t*i+e.ema*(1-i)}e.lastValue=t}return{value:e.ema,state:e}}function l(t,i,s=!1){const e=a(t,i.fast,s),n=a(t,i.slow,s),h=null!==e.value&&null!==n.value?e.value-n.value:null;let o={value:null,state:i.signal};null!==h&&(o=a(h,i.signal,s));const l=null!==h&&null!==o.value?h-o.value:null;return{macdLine:h,signalLine:o.value,histogram:l,state:{fast:e.state,slow:n.state,signal:o.state}}}function r(t){return{period:t,window:[],sum:0}}function c(t,i,s=!1){let e=[...i.window],n=i.sum;if(s&&e.length>0){const i=e[e.length-1];e[e.length-1]=t,n=n-i+t}else e.push(t),n+=t,e.length>i.period&&(n-=e.shift());return{value:e.length===i.period?n/i.period:null,state:{period:i.period,window:e,sum:n}}}function d(t,i,s=!1){const e={...i};if(null===e.lastPrice)return e.lastPrice=t,{value:null,state:e};const n=t-e.lastPrice,h=Math.max(0,n),o=Math.max(0,-n);return s?e.gains.length>0&&(e.gains[e.gains.length-1]=h,e.losses[e.losses.length-1]=o):(e.gains.push(h),e.losses.push(o),e.gains.length>e.period&&(e.gains.shift(),e.losses.shift())),e.lastPrice=t,e.gains.length===e.period?(0===e.avgGain?(e.avgGain=e.gains.reduce((t,i)=>t+i,0)/e.period,e.avgLoss=e.losses.reduce((t,i)=>t+i,0)/e.period):(e.avgGain=(e.avgGain*(e.period-1)+h)/e.period,e.avgLoss=(e.avgLoss*(e.period-1)+o)/e.period),0===e.avgLoss?{value:100,state:e}:{value:100-100/(1+e.avgGain/e.avgLoss),state:e}):{value:null,state:e}}function u(t,i,s=!1,e=!1){let n=[...i.window],h=i.sum,o=i.sumSquares;if(s&&n.length>0){const i=n[n.length-1];n[n.length-1]=t,h=h-i+t,o=o-i*i+t*t}else if(n.push(t),h+=t,o+=t*t,n.length>i.period){const t=n.shift();h-=t,o-=t*t}let a=null,l=null,r=null;if(n.length===i.period){a=h/i.period;const t=e?i.period-1:i.period,s=o/t-a*a*i.period/t,n=Math.sqrt(Math.max(0,s));l=a+i.multiplier*n,r=a-i.multiplier*n}return{middle:a,upper:l,lower:r,state:{period:i.period,multiplier:i.multiplier,window:n,sum:h,sumSquares:o}}}function f(t,i,s,e=!1){let n=0,h=0;null===s.prevHigh||null===s.prevLow||e?null!==s.prevHigh&&null!==s.prevLow&&e&&(n=Math.max(0,t-s.prevHigh),h=Math.max(0,s.prevLow-i)):(n=Math.max(0,t-s.prevHigh),h=Math.max(0,s.prevLow-i));let o={value:null,state:s.demaxSMA},a={value:null,state:s.deminSMA};null!==s.prevHigh&&null!==s.prevLow&&(o=c(n,s.demaxSMA,e),a=c(h,s.deminSMA,e));let l=null;if(null!==o.value&&null!==a.value){const t=o.value+a.value;l=0!==t?o.value/t:.5}return{demarker:l,state:{period:s.period,prevHigh:e?s.prevHigh:t,prevLow:e?s.prevLow:i,demaxSMA:o.state,deminSMA:a.state}}}class p{constructor(t){this.type=t,this.points=[],this.style={strokeStyle:"#000000",lineWidth:1,fillStyle:"rgba(0, 0, 0, 0.1)"}}addPoint(t,i){this.points.push({time:t,price:i})}getPixelCoordinates(t,i,s,e,n,h,o=!1){if(!e?.allData||!e.getVisibleData)return null;const a=e.allData,l=e.getVisibleData(),r=a.findIndex(i=>i.time>=t);if(-1===(-1===r?a.length-1:0===r?0:Math.abs(a[r].time-t)<Math.abs(a[r-1].time-t)?r:r-1))return null;const c=s.width/e.visibleCount,d=l.findIndex(i=>i.time>=t),u=-1===d?l.length-1:0===d?0:Math.abs(l[d].time-t)<Math.abs(l[d-1].time-t)?d:d-1,f=s.x+u*c+c/2;return(i<n||i>h)&&!o?null:{x:f,y:s.y+(h-i)/(h-n)*s.height}}draw(t,i,s,e,n){}toJSON(){return{type:this.type,points:this.points,style:this.style}}fromJSON(t){this.points=t.points,this.style=t.style}}class m extends p{constructor(t,i="line"){super(i),this.barWidth=t,this.constraint="horizontal-line"===i?"horizontal":"vertical-line"===i?"vertical":"line"}draw(t,i,s,e,n,h,o){if(this.points.length<2)return;const a=this.getPixelCoordinates(this.points[0].time,this.points[0].price,i,s,e,n);let l=this.points[1].time,r=this.points[1].price;"horizontal"===this.constraint?r=this.points[0].price:"vertical"===this.constraint&&(l=this.points[0].time);const c=this.getPixelCoordinates(l,r,i,s,e,n);a&&c&&(t.beginPath(),t.strokeStyle=this.style.strokeStyle,t.lineWidth=this.style.lineWidth,t.moveTo(a.x,a.y),t.lineTo(c.x,c.y),t.stroke())}}class b extends p{constructor(){super("rectangle")}draw(t,i,s,e,n,h){if(this.points.length<2)return;const o=this.getPixelCoordinates(this.points[0].time,this.points[0].price,i,s,e,n),a=this.getPixelCoordinates(this.points[1].time,this.points[1].price,i,s,e,n);o&&a&&(t.beginPath(),t.fillStyle=this.style.fillStyle,t.strokeStyle=this.style.strokeStyle,t.lineWidth=this.style.lineWidth,t.rect(Math.min(o.x,a.x),Math.min(o.y,a.y),Math.abs(a.x-o.x),Math.abs(a.y-o.y)),t.fill(),t.stroke())}}class g extends p{constructor(t){super("fibonacci"),this.levels=[0,.236,.382,.618,1,1.618,2,2.618,3.618,4.236],this.style.strokeStyle="dark"===t?"#FFFFFF":"#000000"}draw(t,i,s,e,n,h,o){if(this.points.length<2)return;const a=!0,l=this.getPixelCoordinates(this.points[0].time,this.points[0].price,i,s,e,n,a),r=this.getPixelCoordinates(this.points[1].time,this.points[1].price,i,s,e,n,a);if(!l||!r)return;const c=Math.abs(this.points[1].price-this.points[0].price),d=this.points[1].price>this.points[0].price,u=this.points[0].price;let f=null,p=null;if(o){f=o.startTime,p=o.endTime;const t=Math.min(this.points[0].time,this.points[1].time),i=Math.max(this.points[0].time,this.points[1].time);if(t>p||i<f)return}t.lineWidth=this.style.lineWidth,t.strokeStyle=h.textColor,t.fillStyle=h.textColor,t.setLineDash([5,5]),t.textAlign="left",t.font="12px Arial",this.levels.forEach(h=>{const o=d?u+c*h:u-c*h,a=this.getPixelCoordinates(this.points[1].time,o,i,s,e,n);if(!a)return;t.beginPath(),t.moveTo(l.x,a.y),t.lineTo(r.x,a.y),t.stroke();const f=(100*h).toFixed(1)+"%";t.fillText(f,r.x+5,a.y)}),t.setLineDash([])}}class y extends p{constructor(t,i){super("fibonacci-zoon"),this.theme=t,this.halfBarWidth=i/2}fibSequence(t=8){if(t<0)return[];if(0===t)return[0];if(1===t)return[1];const i=[0,1,1];for(;i.length<t;){const t=i.length;i.push(i[t-1]+i[t-2])}return i}draw(t,i,s,e,n,h,o){if(this.points.length<2)return;this.getPixelCoordinates(this.points[0].time,this.points[0].price,i,s,e,n),this.getPixelCoordinates(this.points[1].time,this.points[1].price,i,s,e,n);let a=null,l=null;o&&(a=o.startTime,l=o.endTime);const r=s.allData;if(!r||r.length<2)return;const c=r.findIndex(t=>t.time>=this.points[0].time),d=r.findIndex(t=>t.time>=this.points[1].time);if(-1===c||-1===d)return;const u=Math.abs(d-c),f=d>c?1:-1,p=Math.max(1,u),m=this.fibSequence(10),b=m.map(t=>{const i=c+f*t*p,s=r.length-1;return i>0&&i<=s?r[i].time:i<0?r[0].time-1:r[s].time+1}),g=h.textColor;this.style.strokeStyle=g,this.style.fillStyle=g,t.lineWidth=this.style.lineWidth,t.strokeStyle=g,t.fillStyle=g,t.setLineDash([5,5]),t.textAlign="center",t.font="12px Arial",b.forEach((h,o)=>{const r=s.allData[s.allData.length-1]?.time;if(r&&h>r)return;if(a&&h<a)return;if(l&&h>l)return;const c=this.getPixelCoordinates(h,this.points[0].price,i,s,e,n);if(!c)return;t.beginPath(),t.moveTo(c.x,i.y),t.lineTo(c.x,i.y+i.height-20),t.stroke();const d=m[o].toString();t.fillText(d,c.x,i.height-15),t.measureText(d).width;const u=m[o]*p;if(u>0){const s=`(${u})`,e=t.measureText(s).width;t.fillText(s,c.x+e,i.height-15)}}),t.setLineDash([])}}class v{constructor(t){this.stockChart=t,this.drawings=[],this.activeTool=null,this.currentDrawing=null,this.isDrawing=!1,this.selectedDrawing=null,this.selectedPoint=null,this.isEditing=!1,this.t=!1,this.editPlotId=null,this.handleMouseDownBound=this.handleMouseDown.bind(this),this.handleMouseMoveBound=this.continueDrawing.bind(this),this.handleMouseUpBound=this.completeDrawing.bind(this),this.handleTouchStartBound=this.handleTouchStart.bind(this),this.handleTouchMoveBound=this.handleTouchMove.bind(this),this.handleTouchEndBound=this.handleTouchEnd.bind(this),this.stockChart.canvas.addEventListener("mousedown",this.handleMouseDownBound),this.stockChart.canvas.addEventListener("mousemove",this.handleMouseMoveBound),this.stockChart.canvas.addEventListener("mouseup",this.handleMouseUpBound),this.stockChart.canvas.addEventListener("touchstart",this.handleTouchStartBound,{passive:!1}),this.stockChart.canvas.addEventListener("touchmove",this.handleTouchMoveBound,{passive:!1}),this.stockChart.canvas.addEventListener("touchend",this.handleTouchEndBound),this.touchStartTime=0,this.touchTimeout=null,this.touchDistance=0,this.touchMoved=!1,this.defaultStyles={line:{strokeStyle:"#ff6b35",lineWidth:2,fillStyle:"rgba(255, 107, 53, 0.1)"},"horizontal-line":{strokeStyle:"#ff6b35",lineWidth:2,fillStyle:"rgba(255, 107, 53, 0.1)"},"vertical-line":{strokeStyle:"#ff6b35",lineWidth:2,fillStyle:"rgba(255, 107, 53, 0.1)"},rectangle:{strokeStyle:"#ff6b35",lineWidth:2,fillStyle:"rgba(255, 107, 53, 0.1)"},fibonacci:{strokeStyle:"dark"===t.options.theme?"#ffffffc5":"#000000a9",lineWidth:1,fillStyle:"rgba(76, 175, 80, 0.1)"},"fibonacci-zoon":{strokeStyle:"dark"===t.options.theme?"#ffffffc5":"#000000a9",lineWidth:1,fillStyle:"rgba(76, 175, 80, 0.1)"}}}get isChartFrozen(){return this.t}i(){return window.innerWidth<=768}h(t){const i=this.stockChart.canvas.getBoundingClientRect();return{x:t.clientX-i.left,y:t.clientY-i.top}}setActiveTool(t){"settings"!==t?(this.activeTool===t?this.activeTool=null:this.activeTool=t,this.currentDrawing=null,this.isDrawing=!1,this.selectedDrawing=null,this.selectedPoint=null,this.isEditing=!1):this.showIndicatorSettings()}startDrawing(t,i,s){if(this.activeTool&&this.activeTool!==t)return;this.isDrawing=!0,this.t=!0;const e=this.stockChart.plotLayoutManager.getPlotLayout("main");if(!e)return;const n=i-e.x,h=e.width/this.stockChart.dataViewport.visibleCount,o=Math.floor(n/h),a=this.stockChart.dataViewport.startIndex+o;if(!this.stockChart.dataViewport?.allData)return;const l=this.stockChart.dataViewport.allData;if(!Array.isArray(l)||a<0||a>=l.length)return;const r=l[a];if(!r||"number"!=typeof r.time)return;const c=r.time;if(!this.stockChart.options?.plots)return;const d=this.stockChart.options.plots.find(t=>"main"===t.id);if(!d)return;const u=this.stockChart.calculatePriceRange(d,this.stockChart.dataViewport.getVisibleData(),this.stockChart.dataViewport);if(!u)return;const{minPrice:f,maxPrice:p}=u,v=p-(s-e.y)/e.height*(p-f);switch(t){case"line":this.currentDrawing=new m(h);break;case"rectangle":this.currentDrawing=new b;break;case"fibonacci":this.currentDrawing=new g(this.stockChart.options.theme);break;case"fibonacci-zoon":this.currentDrawing=new y(this.stockChart.options.theme,h);break;case"horizontal-line":this.currentDrawing=new m(h,"horizontal-line");break;case"vertical-line":this.currentDrawing=new m(h,"vertical-line");break;default:return}this.defaultStyles[t]&&Object.assign(this.currentDrawing.style,this.defaultStyles[t]),this.currentDrawing.addPoint(c,v)}continueDrawing(t){const i=this.stockChart.canvas.getBoundingClientRect(),s=t.clientX-i.left,e=t.clientY-i.top,n=this.stockChart.plotLayoutManager.getPlotLayout("main");if(n&&s>=n.x&&s<=n.x+n.width&&e>=n.y&&e<=n.y+n.height){const t=s-n.x,i=n.width/this.stockChart.dataViewport.visibleCount,h=Math.floor(t/i),o=this.stockChart.dataViewport.startIndex+h;if(!this.stockChart.dataViewport?.allData||o<0||o>=this.stockChart.dataViewport.allData.length)return;const a=this.stockChart.dataViewport.allData[o];if(!a||"number"!=typeof a.time)return;const l=a.time,r=this.stockChart.options.plots.find(t=>"main"===t.id);if(!r)return;const c=this.stockChart.calculatePriceRange(r,this.stockChart.dataViewport.getVisibleData(),this.stockChart.dataViewport);if(!c)return;const d=e-n.y,{minPrice:u,maxPrice:f}=c,p=f-d/n.height*(f-u);let m=!1;if(this.isEditing&&this.selectedDrawing&&null!==this.selectedPoint){const t={...this.selectedDrawing.points[this.selectedPoint]},i={time:l,price:p};t.time===i.time&&t.price===i.price||(this.selectedDrawing.points[this.selectedPoint]=i,m=!0)}else if(this.isDrawing&&this.currentDrawing)if(1===this.currentDrawing.points.length){const t={time:l,price:p};if(["horizontal-line","vertical-line"].includes(this.activeTool)){const i=this.currentDrawing.points[0];"horizontal-line"===this.activeTool?t.price=i.price:"vertical-line"===this.activeTool&&(t.time=i.time)}this.currentDrawing.addPoint(t.time,t.price),m=!0}else if(2===this.currentDrawing.points.length){const t={...this.currentDrawing.points[1]},i=this.currentDrawing.points[0];let s={time:l,price:p};["horizontal-line","vertical-line"].includes(this.activeTool)&&("horizontal-line"===this.activeTool?s.price=i.price:"vertical-line"===this.activeTool&&(s.time=i.time)),t.time===s.time&&t.price===s.price||(this.currentDrawing.points[1]=s,m=!0)}m&&this.stockChart.render()}}completeDrawing(){this.isEditing?this.selectedPoint=null:this.isDrawing&&this.currentDrawing&&this.currentDrawing.points.length>=2&&(this.drawings.push(this.currentDrawing),this.isDrawing=!1,this.selectedDrawing=null,this.currentDrawing=null,this.isEditing=!1,this.t=!1,this.setActiveTool(null),this.stockChart&&"function"==typeof this.stockChart.setDrawingTool&&this.stockChart.setDrawingTool(null))}handleMouseDown(t){const i=this.stockChart.canvas.getBoundingClientRect(),s=t.clientX-i.left,e=t.clientY-i.top;if(this.activeTool)this.startDrawing(this.activeTool,s,e);else{if(this.trySelectPoint(s,e))return this.isEditing=!0,void(this.t=!0);this.selectedDrawing&&this.isNearDrawing(s,e,this.selectedDrawing)||(this.isEditing=!1,this.selectedDrawing=null,this.selectedPoint=null,this.t=!1)}}handleTouchStart(t){if(t.preventDefault(),t.stopPropagation(),this.touchStartTime=Date.now(),this.touchMoved=!1,this.touchDistance=0,1===t.touches.length){const i=t.touches[0],{x:s,y:e}=this.h(i);if(this.activeTool)this.startDrawing(this.activeTool,s,e);else{this.touchTimeout&&(clearTimeout(this.touchTimeout),this.touchTimeout=null);const t=this.i()?20:10;if(this.trySelectPoint(s,e,t))return this.isEditing=!0,this.t=!0,void(window.navigator&&window.navigator.vibrate&&window.navigator.vibrate(50));this.selectedDrawing&&this.isNearDrawing(s,e,this.selectedDrawing)||(this.touchTimeout=setTimeout(()=>{this.touchMoved||(this.isEditing=!1,this.selectedDrawing=null,this.selectedPoint=null,this.t=!1,this.stockChart.render())},300))}this.lastTouchX=s,this.lastTouchY=e}else 2===t.touches.length&&this.isEditing&&this.completeDrawing()}handleTouchMove(t){if(t.preventDefault(),t.stopPropagation(),1===t.touches.length){const i=t.touches[0],{x:s,y:e}=this.h(i),n=s-this.lastTouchX,h=e-this.lastTouchY;this.touchDistance+=Math.sqrt(n*n+h*h),this.touchDistance>10&&(this.touchMoved=!0,this.touchTimeout&&(clearTimeout(this.touchTimeout),this.touchTimeout=null)),(this.isDrawing&&this.currentDrawing||this.isEditing&&this.selectedDrawing)&&requestAnimationFrame(()=>{this.continueDrawing({clientX:i.clientX,clientY:i.clientY})}),this.lastTouchX=s,this.lastTouchY=e}else 2===t.touches.length&&(this.isDrawing||this.isEditing)&&(this.touchMoved=!0)}handleTouchEnd(t){t.preventDefault(),t.stopPropagation();const i=Date.now()-this.touchStartTime;this.touchTimeout&&(clearTimeout(this.touchTimeout),this.touchTimeout=null),!this.touchMoved&&i<300?this.isEditing&&(this.completeDrawing(),window.navigator&&window.navigator.vibrate&&window.navigator.vibrate(50)):(this.isDrawing||this.isEditing)&&this.completeDrawing(),this.touchStartTime=0,this.touchMoved=!1,this.touchDistance=0}clearDrawings(){this.drawings=[],this.currentDrawing=null,this.isDrawing=!1,this.selectedDrawing=null}render(t){this.stockChart.plotLayoutManager&&this.stockChart.plotLayoutManager.getPlotLayout("main")&&(t.save(),t.lineJoin="round",t.lineCap="round",this.drawings.forEach(i=>{this.renderDrawing(t,i)}),this.currentDrawing&&this.isDrawing&&this.renderDrawing(t,this.currentDrawing),this.selectedDrawing&&this.renderControlPoints(t,this.selectedDrawing),t.restore())}renderControlPoints(t,i){const s=this.stockChart.plotLayoutManager.getPlotLayout("main");if(!s)return;const e=this.stockChart.options.plots.find(t=>"main"===t.id);if(!e)return;const n=this.stockChart.calculatePriceRange(e,this.stockChart.dataViewport.getVisibleData(),this.stockChart.dataViewport);n&&i.points.forEach((e,h)=>{const o=(new p).getPixelCoordinates(e.time,e.price,s,this.stockChart.dataViewport,n.minPrice,n.maxPrice);if(o){if("fibonacci-zoon"===i.type){const t=s.width/this.stockChart.dataViewport.visibleCount;o.x+=t/2}const e=this.i(),n=e?8:4,a=e?2:1;e&&(t.beginPath(),t.arc(o.x,o.y,n+6,0,2*Math.PI),t.fillStyle="rgba(255, 255, 255, 0.2)",t.fill()),t.beginPath(),t.arc(o.x,o.y,n,0,2*Math.PI),t.fillStyle=h===this.selectedPoint?"#ff0000":"#ffffff",t.strokeStyle="#000000",t.lineWidth=a,t.fill(),t.stroke(),e&&(t.beginPath(),t.arc(o.x,o.y,2,0,2*Math.PI),t.fillStyle="#000000",t.fill())}})}renderDrawing(t,i){const{type:s,points:e,style:n}=i;switch(t.save(),s){case"line":case"horizontal-line":case"vertical-line":this.renderLine(t,e,n,s);break;case"rectangle":this.renderRectangle(t,e,n);break;case"fibonacci":case"fibonacci-zoon":const h=this.stockChart.dataViewport.getVisibleStartEndTime();i.draw(t,this.stockChart.plotLayoutManager.getPlotLayout("main"),this.stockChart.dataViewport,this.stockChart.calculatePriceRange(this.stockChart.options.plots.find(t=>"main"===t.id),this.stockChart.dataViewport.getVisibleData(),this.stockChart.dataViewport).minPrice,this.stockChart.calculatePriceRange(this.stockChart.options.plots.find(t=>"main"===t.id),this.stockChart.dataViewport.getVisibleData(),this.stockChart.dataViewport).maxPrice,this.stockChart.currentTheme,h)}t.restore()}renderLine(t,i,s,e){if(i.length<2)return;const n=this.stockChart.plotLayoutManager.getPlotLayout("main");if(!n)return;const h=this.stockChart.options.plots.find(t=>"main"===t.id);if(!h)return;const o=this.stockChart.calculatePriceRange(h,this.stockChart.dataViewport.getVisibleData(),this.stockChart.dataViewport);if(!o)return;const a=new p,l=a.getPixelCoordinates(i[0].time,i[0].price,n,{...this.stockChart.dataViewport,getVisibleData:()=>this.stockChart.dataViewport.getVisibleData()},o.minPrice,o.maxPrice),r=a.getPixelCoordinates(i[1].time,i[1].price,n,{...this.stockChart.dataViewport,getVisibleData:()=>this.stockChart.dataViewport.getVisibleData()},o.minPrice,o.maxPrice),c=this.stockChart.dataViewport.getVisibleStartEndTime();if(c){const{startTime:t,endTime:s}=c;if(i[0].time<t&&i[1].time<t)return;if(i[0].time>s&&i[1].time>s)return}l&&r&&(t.strokeStyle=s.strokeStyle,t.lineWidth=s.lineWidth,t.beginPath(),t.moveTo(l.x,l.y),t.lineTo(r.x,r.y),t.stroke())}renderRectangle(t,i,s){if(i.length<2)return;const e=this.stockChart.plotLayoutManager.getPlotLayout("main");if(!e)return;const n=this.stockChart.options.plots.find(t=>"main"===t.id);if(!n)return;const h=this.stockChart.calculatePriceRange(n,this.stockChart.dataViewport.getVisibleData(),this.stockChart.dataViewport);if(!h)return;const o=(new p).getPixelCoordinates(i[0].time,i[0].price,e,this.stockChart.dataViewport,h.minPrice,h.maxPrice),a=(new p).getPixelCoordinates(i[1].time,i[1].price,e,this.stockChart.dataViewport,h.minPrice,h.maxPrice),l=this.stockChart.dataViewport.getVisibleStartEndTime();if(l){const{startTime:t,endTime:s}=l;if(i[0].time<t&&i[1].time<t)return;if(i[0].time>s&&i[1].time>s)return}if(!o&&!a)return;const r=Math.min(o.x,a.x),c=Math.min(o.y,a.y),d=Math.abs(a.x-o.x),u=Math.abs(a.y-o.y);s.fillStyle&&(t.fillStyle=s.fillStyle,t.fillRect(r,c,d,u)),t.strokeStyle=s.strokeStyle,t.lineWidth=s.lineWidth,t.strokeRect(r,c,d,u)}isNearDrawing(t,i,s){const e=this.stockChart.plotLayoutManager.getPlotLayout("main");if(!e)return!1;const n=this.stockChart.options.plots.find(t=>"main"===t.id);if(!n)return!1;const h=this.stockChart.calculatePriceRange(n,this.stockChart.dataViewport.getVisibleData(),this.stockChart.dataViewport);if(!h)return!1;const o=s.points.map(t=>(new p).getPixelCoordinates(t.time,t.price,e,this.stockChart.dataViewport,h.minPrice,h.maxPrice)).filter(Boolean);if(o.length<2)return!1;switch(s.type){case"line":case"fibonacci":return this.isPointNearLine(t,i,o,10);case"rectangle":return this.isPointInRectangle(t,i,o);default:return!1}}isPointNearLine(t,i,s,e){if(s.length<2)return!1;const[n,h]=s;return this.pointToLineDistance(t,i,n.x,n.y,h.x,h.y)<=e}isPointInRectangle(t,i,s){if(s.length<2)return!1;const e=Math.min(s[0].x,s[1].x),n=Math.min(s[0].y,s[1].y),h=Math.abs(s[1].x-s[0].x),o=Math.abs(s[1].y-s[0].y);return t>=e&&t<=e+h&&i>=n&&i<=n+o}pointToLineDistance(t,i,s,e,n,h){const o=n-s,a=h-e,l=o*o+a*a;let r,c,d=-1;0!==l&&(d=((t-s)*o+(i-e)*a)/l),d<0?(r=s,c=e):d>1?(r=n,c=h):(r=s+d*o,c=e+d*a);const u=t-r,f=i-c;return Math.sqrt(u*u+f*f)}isNearDrawingPoint(t,i,s,e=10){const n=this.stockChart.plotLayoutManager.getPlotLayout("main");if(!n)return null;const h=this.stockChart.options.plots.find(t=>"main"===t.id);if(!h)return null;const o=this.stockChart.calculatePriceRange(h,this.stockChart.dataViewport.getVisibleData(),this.stockChart.dataViewport);if(!o)return null;for(let h=0;h<s.points.length;h++){const a=s.points[h],l=(new p).getPixelCoordinates(a.time,a.price,n,this.stockChart.dataViewport,o.minPrice,o.maxPrice);if(l){let n;if(n="fibonacci-zoon"===s.type?Math.abs(t-l.x):Math.sqrt(Math.pow(t-l.x,2)+Math.pow(i-l.y,2)),n<=e)return{pointIndex:h,drawing:s}}}return null}trySelectPoint(t,i,s=10){for(const e of this.drawings){const n=this.isNearDrawingPoint(t,i,e,s);if(n)return this.selectedDrawing=n.drawing,this.selectedPoint=n.pointIndex,this.isEditing=!0,!0}return!1}exportDrawings(){return JSON.stringify(this.drawings)}importDrawings(t){try{const i=JSON.parse(t);this.drawings=i}catch(t){}}showIndicatorSettings(t={}){const{indicatorId:i,settings:s,plotId:e}=t;this.indicators=[{name:"SMA",id:"sma",settings:[{key:"period",label:"Period",type:"number",default:20,min:1,max:200},{key:"priceType",label:"Price Type",type:"select",default:"close",options:[{value:"close",label:"Close"},{value:"hlc3",label:"HLC/3"},{value:"ohlc4",label:"OHLC/4"},{value:"hlcc4",label:"HLCC/4"}]},{key:"lineColor",label:"Line Color",type:"color",default:"#2196F3"}]},{name:"EMA",id:"ema",settings:[{key:"period",label:"Period",type:"number",default:20,min:1,max:200},{key:"priceType",label:"Price Type",type:"select",default:"close",options:[{value:"close",label:"Close"},{value:"hlc3",label:"HLC/3"},{value:"ohlc4",label:"OHLC/4"}]},{key:"lineColor",label:"Line Color",type:"color",default:"#FF9800"}]},{name:"RSI",id:"rsi",settings:[{key:"period",label:"Period",type:"number",default:14,min:2,max:100},{key:"priceType",label:"Price Type",type:"select",default:"close",options:[{value:"close",label:"Close"},{value:"hlc3",label:"HLC/3"},{value:"ohlc4",label:"OHLC/4"}]},{key:"overbought",label:"Overbought Level",type:"number",default:70,min:50,max:90},{key:"oversold",label:"Oversold Level",type:"number",default:30,min:10,max:50},{key:"lineColor",label:"RSI Line Color",type:"color",default:"#9C27B0"},{key:"overboughtColor",label:"Overbought Color",type:"color",default:"#F44336"},{key:"oversoldColor",label:"Oversold Color",type:"color",default:"#4CAF50"}]},{id:"macd",name:"MACD",plots:[{name:"MACD Line",type:"line"},{name:"Signal Line",type:"line"},{name:"Histogram",type:"histogram"}],settings:[{key:"fastPeriod",label:"Fast Period",type:"number",default:12,min:1,max:50},{key:"slowPeriod",label:"Slow Period",type:"number",default:26,min:1,max:100},{key:"signalPeriod",label:"Signal Period",type:"number",default:9,min:1,max:50},{key:"priceType",label:"Price Type",type:"select",default:"close",options:[{value:"close",label:"Close"},{value:"hlc3",label:"HLC/3"},{value:"ohlc4",label:"OHLC/4"}]},{key:"macdColor",label:"MACD Line Color",type:"color",default:"#2196F3"},{key:"signalColor",label:"Signal Line Color",type:"color",default:"#FF5722"},{key:"histogramColor",label:"Histogram Color",type:"color",default:"#795548"}]},{name:"Bollinger Bands",id:"bollinger",settings:[{key:"period",label:"Period",type:"number",default:20,min:2,max:100},{key:"stdDev",label:"Standard Deviation",type:"number",default:2,min:.1,max:5,step:.001},{key:"priceType",label:"Price Type",type:"select",default:"close",options:[{value:"close",label:"Close"},{value:"hlc3",label:"HLC/3"},{value:"ohlc4",label:"OHLC/4"}]},{key:"upperBandColor",label:"Upper Band Color",type:"color",default:"#E91E63"},{key:"middleBandColor",label:"Middle Band Color",type:"color",default:"#9C27B0"},{key:"lowerBandColor",label:"Lower Band Color",type:"color",default:"#3F51B5"},{key:"fillColor",label:"Fill Color",type:"color",default:"#E1F5FE",opacity:!0}]},{name:"DeMarker",id:"demarker",settings:[{key:"period",label:"Period",type:"number",default:14,min:1,max:100},{key:"overbought",label:"Overbought Level",type:"number",default:.7,min:.5,max:.9,step:.01},{key:"oversold",label:"Oversold Level",type:"number",default:.3,min:.1,max:.5,step:.01},{key:"lineColor",label:"DeMarker Line Color",type:"color",default:"#607D8B"},{key:"overboughtColor",label:"Overbought Color",type:"color",default:"#F44336"},{key:"oversoldColor",label:"Oversold Color",type:"color",default:"#4CAF50"}]}];const n=document.createElement("div");n.style.cssText="\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background-color: rgba(0, 0, 0, 0.5);\n            z-index: 1000;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        ";const h=document.createElement("div");h.style.cssText="\n            background-color: white;\n            border-radius: 8px;\n            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);\n            width: 650px;\n            max-width: 90vw;\n            max-height: 80vh;\n            overflow: hidden;\n            font-family: Arial, sans-serif;\n        ",h.innerHTML=`\n            <div class="modal-header" style="padding: 20px; border-bottom: 1px solid #e0e0e0; background-color: #f8f9fa;">\n                <h3 style="margin: 0; color: #333; font-size: 18px;">Technical Indicators</h3>\n            </div>\n            \n            <div class="tab-container" style="display: flex; border-bottom: 1px solid #e0e0e0; background-color: #f8f9fa; overflow-x: auto;">\n                ${this.indicators.map((t,i)=>`\n                    <button class="tab-btn ${0===i?"active":""}" data-tab="${t.id}" style="\n                        flex: 0 0 auto;\n                        padding: 12px 16px;\n                        border: none;\n                        background: ${0===i?"white":"transparent"};\n                        color: ${0===i?"#333":"#666"};\n                        cursor: pointer;\n                        border-bottom: 2px solid ${0===i?"#007bff":"transparent"};\n                        font-weight: 500;\n                        white-space: nowrap;\n                        min-width: 80px;\n                    ">${t.name}</button>\n                `).join("")}\n            </div>\n            \n            <div class="tab-content" style="padding: 20px; max-height: 450px; overflow-y: auto;">\n                ${this.indicators.map((t,i)=>`\n                    <div id="${t.id}-tab" class="tab-pane ${0===i?"active":""}" style="display: ${0===i?"block":"none"};">\n                        <div class="indicator-settings">\n                            <h4 style="margin: 0 0 20px 0; color: #333; font-size: 16px;">${t.name} Settings</h4>\n                            \n                            <form class="settings-form" data-indicator="${t.id}">\n                                ${t.settings.map(i=>"select"===i.type?`\n                                            <div class="form-group" style="margin-bottom: 16px;">\n                                                <label style="display: block; margin-bottom: 6px; color: #333; font-weight: 500; font-size: 14px;">${i.label}</label>\n                                                <select name="${i.key}" style="\n                                                    width: 100%;\n                                                    padding: 8px 12px;\n                                                    border: 1px solid #ddd;\n                                                    border-radius: 4px;\n                                                    font-size: 14px;\n                                                    background: white;\n                                                ">\n                                                    ${i.options.map(t=>`\n                                                        <option value="${t.value}" ${t.value===i.default?"selected":""}>${t.label}</option>\n                                                    `).join("")}\n                                                </select>\n                                            </div>\n                                        `:"color"===i.type?`\n                                            <div class="form-group" style="margin-bottom: 16px;">\n                                                <label style="display: block; margin-bottom: 6px; color: #333; font-weight: 500; font-size: 14px;">${i.label}</label>\n                                                <div style="display: flex; align-items: center; gap: 10px;">\n                                                    <input \n                                                        type="color" \n                                                        name="${i.key}" \n                                                        value="${i.default}" \n                                                        id="${t.id}-${i.key}"\n                                                        style="\n                                                            width: 50px;\n                                                            height: 35px;\n                                                            border: 1px solid #ddd;\n                                                            border-radius: 4px;\n                                                            cursor: pointer;\n                                                            background: white;\n                                                            padding: 2px;\n                                                        "\n                                                    />\n                                                    <input \n                                                        type="text" \n                                                        name="${i.key}_hex"\n                                                        value="${i.default}" \n                                                        placeholder="#RRGGBB"\n                                                        maxlength="7"\n                                                        style="\n                                                            flex: 1;\n                                                            padding: 8px 12px;\n                                                            border: 1px solid #ddd;\n                                                            border-radius: 4px;\n                                                            font-size: 14px;\n                                                            font-family: monospace;\n                                                            box-sizing: border-box;\n                                                        "\n                                                    />\n                                                    ${i.opacity?`\n                                                        <div style="display: flex; align-items: center; gap: 5px; min-width: 80px;">\n                                                            <label style="font-size: 12px; color: #666;">Opacity:</label>\n                                                            <input \n                                                                type="range" \n                                                                name="${i.key}_opacity"\n                                                                min="0" \n                                                                max="1" \n                                                                step="0.1" \n                                                                value="0.3"\n                                                                style="width: 60px;"\n                                                            />\n                                                            <span class="opacity-value" style="font-size: 11px; color: #666; min-width: 25px;">0.3</span>\n                                                        </div>\n                                                    `:""}\n                                                </div>\n                                            </div>\n                                        `:`\n                                            <div class="form-group" style="margin-bottom: 16px;">\n                                                <label style="display: block; margin-bottom: 6px; color: #333; font-weight: 500; font-size: 14px;">${i.label}</label>\n                                                <input \n                                                    type="${i.type}" \n                                                    name="${i.key}" \n                                                    value="${i.default}" \n                                                    id="${t.id}-${i.key}"\n                                                    ${i.min?`min="${i.min}"`:""}\n                                                    ${i.max?`max="${i.max}"`:""}\n                                                    ${i.step?`step="${i.step}"`:""}\n                                                    style="\n                                                        width: 100%;\n                                                        padding: 8px 12px;\n                                                        border: 1px solid #ddd;\n                                                        border-radius: 4px;\n                                                        font-size: 14px;\n                                                        box-sizing: border-box;\n                                                    "\n                                                />\n                                            </div>\n                                        `).join("")}\n                                \n                                <div class="form-actions" style="margin-top: 24px; display: flex; gap: 12px;">\n                                    <button type="submit" class="add-indicator-btn" id="add-indicator-btn" style="\n                                        background: #00c2ff;\n                                        color: white;\n                                        border: none;\n                                        padding: 10px 20px;\n                                        border-radius: 4px;\n                                        cursor: pointer;\n                                        font-size: 14px;\n                                        font-weight: 500;\n                                    ">${this.editPlotId?"Update Indicator":"➕ Add Indicator"}</button>\n                                </div>\n                            </form>\n                            \n                            <div class="active-instances" style="margin-top: 24px; padding-top: 20px; border-top: 1px solid #e0e0e0;">\n                                <h5 style="margin: 0 0 12px 0; color: #333; font-size: 14px;">Active ${t.name} Instances</h5>\n                                <div id="${t.id}-instances" class="instances-list">\n                                    \x3c!-- Active instances will be populated here --\x3e\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                `).join("")}\n            </div>\n            \n            <div class="modal-footer" style="\n                padding: 16px 20px;\n                border-top: 1px solid #e0e0e0;\n                background-color: #f8f9fa;\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n            ">\n                <div style="color: #666; font-size: 12px;">\n                    Configure settings and colors, then click "Add Indicator" to apply\n                </div>\n                <button id="close-indicator-settings" style="\n                    background: #6c757d;\n                    color: white;\n                    border: none;\n                    padding: 8px 20px;\n                    border-radius: 4px;\n                    cursor: pointer;\n                    font-size: 14px;\n                ">Close</button>\n            </div>\n        `,n.appendChild(h),document.body.appendChild(n),this.initializeIndicatorDialog(n,this.indicators,{editIndicatorId:i,editSettings:s,editPlotId:e})}getMainPlotStockData(){return this.stockChart.options.plots.find(t=>"main"===t.id).data}initializeIndicatorDialog(t,i,s={}){const{editIndicatorId:e,editSettings:n}=s,h=t.querySelector("div");this.setupColorPickerSync(h);const o=h.querySelectorAll(".tab-btn"),a=h.querySelectorAll(".tab-pane");if(o.forEach(t=>{t.addEventListener("click",()=>{o.forEach(t=>{t.classList.remove("active"),t.style.background="transparent",t.style.color="#666",t.style.borderBottomColor="transparent"}),a.forEach(t=>{t.classList.remove("active"),t.style.display="none"}),t.classList.add("active"),t.style.background="white",t.style.color="#333",t.style.borderBottomColor="#007bff";const i=h.querySelector(`#${t.dataset.tab}-tab`);i.classList.add("active"),i.style.display="block",this.updateInstancesList(t.dataset.tab)})}),h.addEventListener("submit",t=>{t.preventDefault();const s=t.target,e=s.dataset.indicator,n=new FormData(s),h={};for(let[t,s]of n.entries()){if(t.endsWith("_hex"))continue;const n=i.find(t=>t.id===e).settings.find(i=>i.key===t);n&&"number"===n.type?h[t]=parseFloat(s):h[t]=s}this.addIndicatorWithSettings(e,h),this.updateInstancesList(e);const o=s.querySelector(".add-indicator-btn");o.textContent="✓ Successfully",o.style.background="#28a745",setTimeout(()=>{o.textContent="➕ Add Indicator",o.style.background="#00c2ff"},2e3)}),h.addEventListener("click",t=>{if(t.target.classList.contains("remove-instance-btn")){const i=t.target.dataset.plotId,s=t.target.dataset.indicatorId;this.removeIndicator(i),this.updateInstancesList(s)}if(t.target.classList.contains("edit-instance-btn")){const i=t.target.dataset.plotId;this.editIndicatorInstance(i);const s=document.getElementById("add-indicator-btn");s&&(s.textContent="✏️ Update Indicator")}}),h.querySelector("#close-indicator-settings").addEventListener("click",()=>{document.body.removeChild(t)}),t.addEventListener("click",i=>{i.target===t&&document.body.removeChild(t)}),i.forEach(t=>{this.updateInstancesList(t.id)}),e&&n){const t=h.querySelector(`.tab-btn[data-tab="${e}"]`);t&&t.click();const i=h.querySelector(`#${e}-tab .settings-form`);if(i)for(const t in n){const s=i.querySelector(`[name="${t}"]`);if(s){s.value=n[t];const e=i.querySelector(`[name="${t}_hex"]`);e&&(e.value=n[t])}}}}setupColorPickerSync(t){t.addEventListener("input",i=>{const s=i.target;if("color"===s.type){const i=t.querySelector(`[name="${s.name}_hex"]`);i&&(i.value=s.value.toUpperCase())}if(s.name&&s.name.endsWith("_hex")){const i=s.name.replace("_hex",""),e=t.querySelector(`[name="${i}"]`);e&&this.isValidHex(s.value)&&(e.value=s.value)}if("range"===s.type&&s.name.includes("opacity")){const t=s.parentElement.querySelector(".opacity-value");t&&(t.textContent=s.value)}}),t.addEventListener("blur",t=>{const i=t.target;i.name&&i.name.endsWith("_hex")&&(this.isValidHex(i.value)?(i.style.borderColor="#ddd",i.title=""):(i.style.borderColor="#dc3545",i.title="Invalid hex color format. Use #RRGGBB"))},!0)}isValidHex(t){return/^#[0-9A-Fa-f]{6}$/.test(t)}updateInstancesList(t){const i=document.querySelector(`#${t}-instances`);if(!i)return;const s=this.getIndicatorInstances(t);if(this.indicators.find(i=>i.id===t),0===s.length)i.innerHTML=`\n                <div style="color: #666; font-style: italic; padding: 12px; text-align: center; border: 1px dashed #ddd; border-radius: 4px;">\n                    No ${t.toUpperCase()} instances added yet\n                </div>\n            `;else{const e=[];new Set(s.map(t=>t.name)).forEach(t=>{const i=s.find(i=>i.name===t);i&&e.push(i)}),i.innerHTML=e.map(i=>`\n                <div class="instance-item" style="\n                    display: flex;\n                    align-items: center;\n                    justify-content: space-between;\n                    padding: 10px 12px;\n                    border: 1px solid #e0e0e0;\n                    border-radius: 4px;\n                    margin-bottom: 8px;\n                    background: #f9f9f9;\n                ">\n                    <div style="flex: 1;">\n                        <div style="font-weight: 500; color: #333; font-size: 13px; display: flex; align-items: center; gap: 8px;">\n                            ${i.name}\n                            ${this.getColorIndicatorsForInstance(i)}\n                        </div>\n                        <div style="color: #666; font-size: 11px;">${this.formatInstances(i)}</div>\n                    </div>\n                    <div style="display: flex; gap: 6px;">\n                        <button class="edit-instance-btn" data-plot-id="${i.plotId}" style="\n                            background: #ffc107;\n                            color: #212529;\n                            border: none;\n                            padding: 4px 8px;\n                            border-radius: 3px;\n                            cursor: pointer;\n                            font-size: 11px;\n                        ">Edit</button>\n                        <button class="remove-instance-btn" data-plot-id="${i.plotId}" data-indicator-id="${t}" style="\n                            background: #dc3545;\n                            color: white;\n                            border: none;\n                            padding: 4px 8px;\n                            border-radius: 3px;\n                            cursor: pointer;\n                            font-size: 11px;\n                        ">Remove</button>\n                    </div>\n                </div>\n            `).join("")}}getColorIndicatorsForInstance(t){return Object.entries(t.settings).filter(([t,i])=>t.toLowerCase().includes("color")&&"string"==typeof i&&i.startsWith("#")).map(([t,i])=>`\n            <div style="\n                width: 12px; \n                height: 12px; \n                background-color: ${i}; \n                border: 1px solid #ccc; \n                border-radius: 2px;\n                display: inline-block;\n                margin-right: 2px;\n                title: '${t}: ${i}'\n            "></div>\n        `).join("")}formatInstances({settings:t}){return Object.entries(t).filter(([t,i])=>!t.toLowerCase().includes("color")&&!t.includes("opacity")).map(([t,i])=>`${t}: ${i}`).join(", ")}getIndicatorInstances(t){return this.stockChart&&this.stockChart.options&&this.stockChart.options.plots?this.stockChart.options.plots.filter(i=>i.indicator&&i.indicator.id===t).map(t=>({name:t.indicator.name,plotId:t.id,settings:t.indicator.settings||{}})):[]}addIndicatorWithSettings(t,i){this.editPlotId&&this.removeIndicator(this.editPlotId);let s=this.getIndicatorDisplayName(t);i.period&&(s+=` (${i.period})`),this.stockChart.options.plots||(this.stockChart.options.plots=[]);const e=this.getValueSelector(i.priceType||"close");let n=[];const h=this.getMainPlotStockData();switch(t){case"sma":n=function(t,i,s=t=>t.close){let e=r(i);const n=[];for(const i of t){const t=c(s(i),e);n.push({time:i.time,value:t.value}),e=t.state}return n}(h,i.period,e);break;case"bollinger":n=function(t,i,s=2,e=t=>t.close){let n=function(t=20,i=2){return{period:t,multiplier:i,window:[],sum:0,sumSquares:0}}(i,s),h=r(i);const o=[];for(const i of t){const t=u(e(i),n),s=c(e(i),h);o.push({time:i.time,upper:t.upper,lower:t.lower,middle:s.value}),n=t.state,h=s.state}return o}(h,i.period,i.standardDeviationMultiplier,e);break;case"demarker":n=function(t,i=14){let s=function(t=14){return{period:t,prevHigh:null,prevLow:null,demaxSMA:r(t),deminSMA:r(t)}}(i);const e=[];for(const i of t){const t=f(i.high,i.low,s);e.push({time:i.time,value:t.demarker}),s=t.state}return e}(h,i.period);break;case"macd":n=function(t,i=12,s=26,e=9,n=t=>t.close){let h=function(t=12,i=26,s=9){return{fast:o(t),slow:o(i),signal:o(s)}}(i,s,e);const a=[];for(const i of t){const t=l(n(i),h);a.push({time:i.time,macd:t.macdLine,signal:t.signalLine,histogram:t.histogram}),h=t.state}return a}(h,i.fastPeriod,i.slowPeriod,i.signalPeriod,e);break;case"ema":n=function(t,i,s=t=>t.close){let e=o(i);const n=[];for(const i of t){const t=a(s(i),e);n.push({time:i.time,value:t.value}),e=t.state}return n}(h,i.period,e);break;case"rsi":n=function(t,i=14,s=t=>t.close){let e=function(t=14){return{period:t,gains:[],losses:[],avgGain:0,avgLoss:0,lastPrice:null}}(i);const n=[];for(const i of t){const t=d(s(i),e);n.push({time:i.time,value:t.value}),e=t.state}return n}(h,i.period,e)}const p=this.stockChart.options.plots?.length||1;this.getPlotsByIndicatorId(t,n,p,i).forEach((e,n)=>{e.indicator={id:t,settings:i,name:s},this.stockChart.options.plots.push(e),"main"===e.id||this.stockChart.plotLayoutManager.updatePlotIndicator(e,"add")}),this.stockChart.render();const m=JSON.parse(localStorage.getItem("asv-chart-indicator-settings"))||[];let b;b=["sma","ema"].includes(t)?m.findIndex(s=>s.id===t&&s.settings.period===i.period):m.findIndex(i=>i.id===t),b>-1?m[b].settings=i:m.push({id:t,settings:i}),localStorage.setItem("asv-chart-indicator-settings",JSON.stringify(m)),this.editPlotId=null}getValueSelector(t){switch(t){case"hlc/3":return t=>(t.high+t.low+t.close)/3;case"ohlc/4":return t=>(t.open+t.high+t.low+t.close)/4;case"hlcc/4":return t=>(t.high+t.low+2*t.close)/4;default:return t=>t.close}}getPlotsByIndicatorId(t,i,s,e){const n=[];switch(t){case"macd":n.push({id:"macd",type:"line",heightRatio:.15,data:i.map(t=>({time:t.time,value:t.macd})),keyLabel:"MACD",style:{lineColor:e.macdColor,lineWidth:3}}),n.push({id:"signal",type:"line",data:i.map(t=>({time:t.time,value:t.signal})),overlay:!0,targetId:"macd",keyLabel:"Signal",style:{lineColor:e.signalColor,lineWidth:1.5}}),n.push({id:"histogram",type:"histogram",data:i.map(t=>({time:t.time,value:t.histogram})),overlay:!0,targetId:"macd",keyLabel:"Histogram",style:{positiveColor:"rgba(0, 150, 136, 0.5)",negativeColor:"rgba(233, 30, 99, 0.5)"}});break;case"rsi":n.push({id:"rsi",type:"line",heightRatio:.15,data:i,keyLabel:"RSI",style:{lineColor:e.lineColor,lineWidth:1.5}});break;case"sma":n.push({id:"sma"+s,type:"line",data:i,targetId:"main",keyLabel:"SMA",overlay:!0,style:{lineColor:e.lineColor,lineWidth:1.5}});break;case"ema":n.push({id:"ema"+s,type:"line",heightRatio:.15,targetId:"main",data:i,keyLabel:"EMA",overlay:!0,style:{lineColor:e.lineColor,lineWidth:1.5}});break;case"bollinger":n.push({id:"bollinger",type:"line",heightRatio:.15,targetId:"main",data:i.map(t=>({time:t.time,value:t.upper})),overlay:!0,keyLabel:"Bollinger Bands",style:{lineColor:e.upperBandColor,lineWidth:1.5}}),n.push({id:"bollinger_lower",type:"line",heightRatio:.15,data:i.map(t=>({time:t.time,value:t.lower})),overlay:!0,targetId:"main",keyLabel:"Bollinger Bands",style:{lineColor:e.lowerBandColor,lineWidth:1.5}}),n.push({id:"bollinger_middle",type:"line",heightRatio:.15,data:i.map(t=>({time:t.time,value:t.middle})),overlay:!0,targetId:"main",keyLabel:"Bollinger Bands",style:{lineColor:e.middleBandColor,lineWidth:1.5}});break;case"demarker":n.push({id:"demarker",type:"line",heightRatio:.15,data:i,keyLabel:"DeMarker",style:{lineColor:e.lineColor,lineWidth:1.5}})}return n}previewIndicator(t,i){const s=Object.entries(i).map(([t,i])=>`${t}: ${i}`).join("\n");alert(`Preview ${this.getIndicatorDisplayName(t)}:\n\n${s}`)}editIndicatorInstance(t){const i=this.stockChart.options.plots.find(i=>i.id===t);if(!i||!i.indicator)return;const{id:s,settings:e}=i.indicator;Object.entries(e).forEach(([t,i])=>{const e=document.getElementById(`${s}-${t}`);e&&(e instanceof HTMLInputElement||e instanceof HTMLSelectElement)&&(e.value=i)}),this.editPlotId=t}removeIndicator(t){if(this.stockChart.options.plots){const i=this.stockChart.options.plots.find(i=>i.id===t),s=this.stockChart.options.plots.filter(i=>i.indicator?.id===t),e=[i.id,...s.map(t=>t.id)],n=this.stockChart.options.plots.find(i=>i.id===t);if(this.stockChart.options.plots=this.stockChart.options.plots.filter(t=>!e.includes(t.id)),this.stockChart.plotLayoutManager.updatePlotIndicator(i,"delete"),s&&s.length&&s.forEach(t=>{this.stockChart.plotLayoutManager.updatePlotIndicator(t,"delete")}),this.stockChart.render(),this.stockChart.options.plots=this.stockChart.options.plots.filter(t=>!e.includes(t.id)),n&&n.indicator){const t=(JSON.parse(localStorage.getItem("asv-chart-indicator-settings"))||[]).filter(t=>t.id!==n.indicator.id);localStorage.setItem("asv-chart-indicator-settings",JSON.stringify(t))}}}getIndicatorDisplayName(t){return{bollinger:"Bollinger Bands",demarker:"DeMarker",ema:"EMA",macd:"MACD",rsi:"RSI",sma:"SMA"}[t]||t.toUpperCase()}}class x{static init(t,i){const s=document.getElementById(t);if(!s)return;const e=new x(s,i);return e.render(),e.loadIndicatorSettings(),e}constructor(t,i){this.ensureContainerSize(t),this.container=t,this.options=x.ensureValidOptions(i),this.updateStockData=this.updateStockData.bind(this),this.wrapper=document.createElement("div"),this.wrapper.style.position="relative",this.wrapper.style.display="flex",this.wrapper.style.width="100%",this.wrapper.style.height="100%",this.container.appendChild(this.wrapper),this.createToolbar(),this.canvas=document.createElement("canvas"),this.ctx=this.canvas.getContext("2d"),this.canvas.style.flex="1",this.wrapper.appendChild(this.canvas),this.initialPinchDistance=0,this.isPinching=!1;const n=this.options.plots?.find(t=>"main"===t.id);if(!n)throw new Error("StockChart options must include a plot with id 'main'.");this.dataViewport=new e(n.data||[],this.options.initialVisibleCandles,5),this.plotLayoutManager=new s(this.canvas.width,this.canvas.height,this.options.plots),this.resize(),this.isDragging=!1,this.isResizingPlot=!1,this.resizingPlotId=null,this.isDraggingYAxis=!1,this.lastMouseX=0,this.lastMouseY=0,this.lastTouchX=0,this.lastTouchY=0,this.crosshairX=-1,this.crosshairY=-1,this.resizeHandleHeight=10,this.minPrice=0,this.maxPrice=0,this.priceScale=1,this.priceOffset=0,this.plotScales=new Map,this.drawingPanel=new v(this),this.activeDrawingTool=null,this.eligibleMainPlotKeys=["time","open","high","low","close"],this.canvas.addEventListener("mousedown",this.handleMouseDown.bind(this)),this.canvas.addEventListener("mousemove",this.handleMouseMove.bind(this)),window.addEventListener("broadcastCursor",t=>{const{x:i,y:s}=t.detail;this.crosshairX=i,this.crosshairY=s,this.render()}),this.canvas.addEventListener("mouseup",this.handleMouseUp.bind(this)),this.canvas.addEventListener("mouseout",this.handleMouseOut.bind(this)),this.canvas.addEventListener("wheel",this.handleMouseWheel.bind(this)),this.canvas.addEventListener("dblclick",this.resetVerticalScale.bind(this)),window.addEventListener("keydown",this.handleKeyDown.bind(this)),this.canvas.addEventListener("touchstart",this.handleTouchStart.bind(this)),this.canvas.addEventListener("touchmove",this.handleTouchMove.bind(this)),this.canvas.addEventListener("touchend",this.handleTouchEnd.bind(this)),this.canvas.addEventListener("touchcancel",this.handleTouchEnd.bind(this)),this.resizeObserver=new ResizeObserver(t=>{for(let i of t)i.target===this.container&&(this.resize(),this.render())}),this.resizeObserver.observe(this.container),this.applyTheme(this.options.theme)}loadIndicatorSettings(){const t=localStorage.getItem("asv-chart-indicator-settings");t&&JSON.parse(t).forEach(t=>{this.drawingPanel.addIndicatorWithSettings(t.id,t.settings)})}static defaultOptions={theme:"light",plots:[{id:"main",heightRatio:.7,data:[],type:"line"}],initialVisibleCandles:100,showDrawingToolbar:!0};static ensureValidOptions(t={}){return{...this.defaultOptions,...t,plots:t.plots||[...this.defaultOptions.plots],theme:t.theme||this.defaultOptions.theme,showDrawingToolbar:void 0!==t.showDrawingToolbar?t.showDrawingToolbar:this.defaultOptions.showDrawingToolbar}}static themes={light:t,dark:i};createToolbar(){if(!this.options.showDrawingToolbar)return;const t=window.innerWidth<=768,i=document.createElement("div");i.style.width=t?"100%":"40px",i.style.height=t?"45px":"auto",i.style.position=t?"absolute":"relative",i.style.bottom=t?"-45px":"auto",i.style.bottom=t?"-45px":"auto",i.style.backgroundColor=this.currentTheme?.background||"#ffffff",i.style.borderRight=t?"none":"1px solid "+(this.currentTheme?.gridColor||"#e0e0e0"),i.style.borderTop=t?"1px solid "+(this.currentTheme?.gridColor||"#e0e0e0"):"none",i.style.display="flex",i.style.flexDirection=t?"row":"column",i.style.padding="5px",i.style.gap="5px",i.style.justifyContent=t?"space-around":"flex-start",i.style.zIndex="1000";const s=t?24:18;[{name:"cursor",icon:`<svg viewBox="0 0 24 24" width="${s}" height="${s}"><path fill="currentColor" d="M13.64,21.97C13.14,22.21 12.54,22 12.31,21.5L10.13,16.76L7.62,18.78C7.45,18.92 7.24,19 7,19A1,1 0 0,1 6,18V3A1,1 0 0,1 7,2C7.24,2 7.47,2.09 7.64,2.23L7.65,2.22L19.14,11.86C19.57,12.22 19.62,12.85 19.27,13.27C19.12,13.45 18.91,13.57 18.7,13.61L15.54,14.23L17.74,18.96C18,19.46 17.76,20.05 17.26,20.28L13.64,21.97Z"/></svg>`,tooltip:"Select Tool"},{name:"line",icon:`<svg viewBox="0 0 24 24" width="${s}" height="${s}"><path fill="currentColor" d="M7 21L17 3h2L9 21H7"/></svg>`,tooltip:"Line Tool"},{name:"vertical-line",icon:`<svg viewBox="0 0 24 24" width="${s}" height="${s}"> <path fill="currentColor" d="M12 3h2v18h-2V3"/></svg>`,tooltip:"Vertical Line Tool"},{name:"horizontal-line",icon:`<svg viewBox="0 0 24 24" width="${s}" height="${s}"><path fill="currentColor" d="M3 12h18v2H3v-2"/></svg>`,tooltip:"Horizontal Line Tool"},{name:"rectangle",icon:`<svg viewBox="0 0 24 24" width="${s}" height="${s}"><path fill="currentColor" d="M2 4H22V20H2V4M4 6V18H20V6H4Z"/></svg>`,tooltip:"Rectangle Tool"},{name:"fibonacci",icon:`<svg viewBox="0 0 24 24" width="${s}" height="${s}"><path fill="currentColor" d="M 3 4 L 3 4 v 17 h 18 v -2 H 5 V 4 H 3 M 7 4 L 21 4 L 21 6 L 7 6 L 7 4 L 7 4 M 7 9 L 21 9 L 21 11 L 7 11 L 7 9 M 7 14 L 21 14 L 21 16 L 7 16 L 7 14"/></svg>`,tooltip:"Fibonacci Tool"},{name:"fibonacci-zoon",icon:`<svg viewBox="0 0 24 24" width="${s}" height="${s}"><path fill="currentColor" d="M3 3v18h18v-2H5V3H3m5 0v14h2V3H8m5 0v14h2V3h-2m5 0v14h2V3h-2"/></svg>`,tooltip:"Fibonacci Zoon Tool"},{name:"clear",icon:`<svg viewBox="0 0 24 24" width="${s}" height="${s}"><path fill="currentColor" d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z"/></svg>`,tooltip:"Clear All Drawings"},{name:"settings",icon:`<svg viewBox="0 0 24 24" width="${s}" height="${s}"><path fill="currentColor" d="M12 8.666c-1.838 0-3.333 1.496-3.333 3.334s1.495 3.333 3.333 3.333 3.333-1.495 3.333-3.333-1.495-3.334-3.333-3.334m0 7.667c-2.39 0-4.333-1.943-4.333-4.333s1.943-4.334 4.333-4.334 4.333 1.944 4.333 4.334c0 2.39-1.943 4.333-4.333 4.333m-1.193 6.667h2.386c.379-1.104.668-2.451 2.107-3.05 1.496-.617 2.666.196 3.635.672l1.686-1.688c-.508-1.047-1.266-2.199-.669-3.641.567-1.369 1.739-1.663 3.048-2.099v-2.388c-1.235-.421-2.471-.708-3.047-2.098-.572-1.38.057-2.395.669-3.643l-1.687-1.686c-1.117.547-2.221 1.257-3.642.668-1.374-.571-1.656-1.734-2.1-3.047h-2.386c-.424 1.231-.704 2.468-2.099 3.046-.365.153-.718.226-1.077.226-.843 0-1.539-.392-2.566-.893l-1.687 1.686c.574 1.175 1.251 2.237.669 3.643-.571 1.375-1.734 1.654-3.047 2.098v2.388c1.226.418 2.468.705 3.047 2.098.581 1.403-.075 2.432-.669 3.643l1.687 1.687c1.45-.725 2.355-1.204 3.642-.669 1.378.572 1.655 1.738 2.1 3.047m3.094 1h-3.803c-.681-1.918-.785-2.713-1.773-3.123-1.005-.419-1.731.132-3.466.952l-2.689-2.689c.873-1.837 1.367-2.465.953-3.465-.412-.991-1.192-1.087-3.123-1.773v-3.804c1.906-.678 2.712-.782 3.123-1.773.411-.991-.071-1.613-.953-3.466l2.689-2.688c1.741.828 2.466 1.365 3.465.953.992-.412 1.082-1.185 1.775-3.124h3.802c.682 1.918.788 2.714 1.774 3.123 1.001.416 1.709-.119 3.467-.952l2.687 2.688c-.878 1.847-1.361 2.477-.952 3.465.411.992 1.192 1.087 3.123 1.774v3.805c-1.906.677-2.713.782-3.124 1.773-.403.975.044 1.561.954 3.464l-2.688 2.689c-1.728-.82-2.467-1.37-3.456-.955-.988.41-1.08 1.146-1.785 3.126"/></svg>`,tooltip:"Settings"}].forEach(t=>{const s=document.createElement("button");s.innerHTML=t.icon,s.title=t.tooltip;const e=window.innerWidth<=768,n=e?"36px":"30px";s.style.width=n,s.style.height=n,s.style.border="none",s.style.borderRadius="4px",s.style.backgroundColor="transparent",s.style.cursor="pointer",s.style.display="flex",s.style.alignItems="center",s.style.justifyContent="center",s.style.padding=e?"8px":"6px",s.style.color=this.currentTheme?.textColor||"#000000",s.style.touchAction="manipulation",s.style.setProperty("-webkit-tap-highlight-color","transparent"),s.style.userSelect="none",s.addEventListener("mouseover",()=>{s.style.backgroundColor=this.currentTheme?.gridColor||"#e0e0e0"}),s.addEventListener("mouseout",()=>{s.style.backgroundColor=t.name===this.activeDrawingTool?this.currentTheme?.gridColor||"#e0e0e0":"transparent"}),s.addEventListener("click",()=>{i.querySelectorAll("button").forEach(t=>{t.style.backgroundColor="transparent"}),"clear"===t.name?this.clearDrawings():"cursor"===t.name?(this.setDrawingTool(null),s.style.backgroundColor=this.currentTheme?.gridColor||"#e0e0e0"):(this.setDrawingTool(t.name),s.style.backgroundColor=this.currentTheme?.gridColor||"#e0e0e0")}),i.appendChild(s)}),this.wrapper.insertBefore(i,this.canvas),this.toolbar=i}calculatePriceRange(t,i,s){let e,n;if("volume"===t.type)e=0,n=Math.max(...i.map(t=>t.volume||1));else if("line"===t.type){const i=t.data.slice(s.startIndex,s.startIndex+s.visibleCount).map(t=>t.value??t.close).filter(t=>null!==t&&isFinite(t));if(0===i.length)return{minPrice:0,maxPrice:1};const h=Math.min(...i),o=Math.max(...i),a=.1*(o-h);e=h-a,n=o+a}else{const t=i.map(t=>t.low),s=i.map(t=>t.high),h=Math.min(...t),o=Math.max(...s),a=.1*(o-h);e=h-a,n=o+a}if(this.plotScales instanceof Map&&t&&t.id){const i=this.plotScales.get(t.id)||1;if(1!==i){const t=(n+e)/2,s=(n-e)/2;e=t-s/i,n=t+s/i}}return{minPrice:e,maxPrice:n}}calculateYAxisWidth(){if(!this.ctx||!this.dataViewport)return 80;const t=this.ctx;let i=0;const s=this.canvas.width<600?10:12;t.font=`${s}px Arial`;const e=this.dataViewport.getVisibleData();return 0===e.length?80:(this.options.plots.forEach(s=>{const{minPrice:n,maxPrice:h}=this.calculatePriceRange(s,e,this.dataViewport);let o=[n,h];const a=h-n;for(let t=1;t<4;t++)o.push(n+a*t/4);o.forEach(e=>{let n;n="volume"===s.type?e>=1e6?(e/1e6).toFixed(1)+"M":e>=1e3?(e/1e3).toFixed(1)+"K":Math.round(e).toLocaleString():e>=1e3?e.toFixed(0):e>=100?e.toFixed(1):e>=10?e.toFixed(2):e.toFixed(3);const h=t.measureText(n).width;i=Math.max(i,h)})}),i+(this.canvas.width<600?4:8))}resize(){let{clientWidth:t,clientHeight:i}=this.container;const s=this.container.parentElement;if(0===t&&(t=window.innerWidth),0===i&&(i=window.innerHeight),s)if("BODY"===s.tagName)t=.9*window.innerWidth,i=.8*window.innerHeight,this.container.style.width=`${t}px`,this.container.style.height=`${i}px`;else{const{clientWidth:e,clientHeight:n}=s;e===t&&n===i||(t=e,i=n,this.container.style.width=`${e}px`,this.container.style.height=`${n}px`)}const e=t-(this.options.showDrawingToolbar?40:0);this.canvas.width=e,this.canvas.height=i;const n=this.calculateYAxisWidth();this.plotLayoutManager.updateCanvasDimensions(e,i,n)}applyTheme(t){const i="string"==typeof t?x.themes[t]||x.themes.light:{...x.themes.light,...t};this.currentTheme=i,this.canvas.style.backgroundColor=i.background,this.toolbar&&(this.toolbar.style.backgroundColor=i.background,this.toolbar.style.borderRight=`1px solid ${i.gridColor}`,this.toolbar.querySelectorAll("button").forEach(t=>{t.style.color=i.textColor,t.title?.toLowerCase().includes(this.activeDrawingTool?.toLowerCase()||"")||null===this.activeDrawingTool&&"Select Tool"===t.title?t.style.backgroundColor=i.background:t.style.backgroundColor="transparent"})),this.render()}handleVerticalMouseWheel(t){if(t.ctrlKey){const i=t.deltaY<0?1.1:.9;this.priceScale*=i,this.render(),t.preventDefault()}}resetVerticalScale(){this.priceScale=1,this.priceOffset=0,this.render()}handleKeyDown(t){if(this.drawingPanel.isEditing&&this.drawingPanel.selectedDrawing&&("Delete"===t.key||"Backspace"===t.key)){const t=this.drawingPanel.drawings.indexOf(this.drawingPanel.selectedDrawing);-1!==t&&(this.drawingPanel.drawings.splice(t,1),this.drawingPanel.selectedDrawing=null,this.drawingPanel.selectedPoint=null,this.drawingPanel.isEditing=!1,this.drawingPanel.t=!1,this.render())}}render(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.fillStyle=this.currentTheme.chartAreaBackground||"#FFFFFF",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height);const t=this.dataViewport.getVisibleData();if(0===t.length)return this.ctx.fillStyle=this.currentTheme.textColor,this.ctx.font="20px Arial",void this.ctx.fillText("No data to display",this.canvas.width/2-80,this.canvas.height/2);const i=new Map,s=this.options.plots.find(t=>"main"===t.id);if(!s)return;const e=s.data.slice(this.dataViewport.startIndex,this.dataViewport.startIndex+this.dataViewport.visibleCount);i.set("main",this.calculatePriceRange(s,e,this.dataViewport)),this.options.plots.forEach(s=>{const e=s.overlay||!1,o=e?s.targetId||"main":s.id,a=this.plotLayoutManager.getPlotLayout(o);if(!a)return;const l=a.width/this.dataViewport.visibleCount;if(!e&&!i.has(s.id)){const t=s.data.slice(this.dataViewport.startIndex,this.dataViewport.startIndex+this.dataViewport.visibleCount);i.set(s.id,this.calculatePriceRange(s,t,this.dataViewport))}const{minPrice:r,maxPrice:c}=i.get(o);if(a){if(e||(this.ctx.fillStyle=this.currentTheme.chartAreaBackground,this.ctx.fillRect(a.x,a.y,a.width,a.height),this.ctx.strokeStyle=this.currentTheme.gridColor,this.ctx.lineWidth=1,this.ctx.strokeRect(a.x,a.y,a.width,a.height)),this.options.plots.indexOf(s)!==this.options.plots.length-1&&!e){const t=a.y+a.height-this.resizeHandleHeight/2;this.ctx.fillStyle=this.isResizingPlot&&this.resizingPlotId===s.id?"rgba(150, 150, 150, 0.3)":"rgba(100, 100, 100, 0.1)",this.ctx.fillRect(a.x,t,a.width,this.resizeHandleHeight),this.ctx.fillStyle=this.currentTheme.gridColor;const i=6,e=30,n=a.x+(a.width-e)/2;for(let s=n;s<n+e;s+=i)this.ctx.beginPath(),this.ctx.arc(s,t+this.resizeHandleHeight/2,1,0,2*Math.PI),this.ctx.fill()}e||this.drawYAxisLabels(s,a,r,c),this.ctx.save(),this.ctx.beginPath(),this.ctx.rect(a.x,a.y,a.width,a.height),this.ctx.clip();const i=(s.data&&s.data.length>0?s.data:t).slice(this.dataViewport.startIndex,this.dataViewport.startIndex+this.dataViewport.visibleCount);switch(s.type){case"candlestick":i.forEach((t,i)=>{const s=.7*l,e=a.x+n(this.dataViewport.startIndex+i,this.dataViewport.startIndex,this.dataViewport.visibleCount,a.width,l)+(l-s)/2,o=h(t.open,r,c,a.height,a.y),d=h(t.high,r,c,a.height,a.y),u=h(t.low,r,c,a.height,a.y),f=h(t.close,r,c,a.height,a.y);!function(t,i,s,e,n,h,o,a,l){const r=i.close>i.open?l.candleUp:l.candleDown;let c=l.candleBorderColor||l.textColor;l.borderColorUseBodyColor&&(c=r),t.strokeStyle=c,t.lineWidth=1,t.beginPath(),t.moveTo(s+a/2,n),t.lineTo(s+a/2,h),t.stroke(),t.fillStyle=r,t.strokeStyle=c,t.lineWidth=1,t.fillRect(s,Math.min(e,o),a,Math.abs(e-o)),t.strokeRect(s,Math.min(e,o),a,Math.abs(e-o))}(this.ctx,t,e,o,d,u,f,s,this.currentTheme)});break;case"line":this.drawLine(i,a,l,r,c,s);break;case"volume":this.drawVolume(i,l,a,c);break;case"histogram":this.drawHistogram(i,l,a,r,c,s);break;case"signal":if(!i||0===i.length)return;this.drawSignals(i,a,l,r,c)}}this.ctx.restore()}),this.drawXAxisLabels(),this.drawChartName(),this.ctx.save();const o=this.plotLayoutManager.getPlotLayout("main");if(o&&(this.ctx.beginPath(),this.ctx.rect(o.x,o.y,o.width,o.height),this.ctx.clip()),this.drawingPanel.render(this.ctx),this.ctx.restore(),-1!==this.crosshairX&&-1!==this.crosshairY&&!this.activeDrawingTool){this.ctx.strokeStyle=this.currentTheme.crosshairColor,this.ctx.lineWidth=1,this.ctx.setLineDash([5,5]);const t=this.options.plots[0],i=this.plotLayoutManager.getPlotLayout(t.id);i&&this.crosshairX<=i.x+i.width&&(this.ctx.beginPath(),this.ctx.moveTo(this.crosshairX,0),this.ctx.lineTo(this.crosshairX,this.plotLayoutManager.getPlotTotalHeight()),this.ctx.stroke()),this.options.plots.forEach(t=>{if(t.overlay)return;const i=this.plotLayoutManager.getPlotLayout(t.id);i&&this.crosshairY>=i.y&&this.crosshairY<=i.y+i.height&&(this.ctx.beginPath(),this.ctx.moveTo(0,this.crosshairY),this.ctx.lineTo(this.plotLayoutManager.getPlotTotalWidth(),this.crosshairY),this.ctx.stroke())}),this.ctx.setLineDash([])}this.displayInfoOverlay()}drawLine(t,i,s,e,o,a){let l=-1;t.forEach((r,c)=>{const d=r.value??r.close;if(null!=d&&0!==d){if(-1!==l){const r=t[l],u=i.x+n(this.dataViewport.startIndex+l,this.dataViewport.startIndex,this.dataViewport.visibleCount,i.width,s)+s/2,f=h(r.value??r.close,e,o,i.height,i.y),p=i.x+n(this.dataViewport.startIndex+c,this.dataViewport.startIndex,this.dataViewport.visibleCount,i.width,s)+s/2,m=h(d,e,o,i.height,i.y),b=a.style?.lineColor||this.currentTheme.lineColor,g=a.style?.lineWidth||2;!function(t,i,s,e,n,h,o){t.strokeStyle=h,t.lineWidth=o,t.beginPath(),t.moveTo(i,s),t.lineTo(e,n),t.stroke()}(this.ctx,u,f,p,m,b,g)}l=c}else l=-1})}drawVolume(t,i,s,e){t.forEach((t,h)=>{const o=.7*i,a=s.x+n(this.dataViewport.startIndex+h,this.dataViewport.startIndex,this.dataViewport.visibleCount,s.width,i)+(i-o)/2,l=(t.volume||0)/e*s.height,r=s.y+s.height-l;this.ctx.fillStyle=this.currentTheme.volumeColor||"rgba(0, 150, 136, 0.6)",this.ctx.fillRect(a,r,o,l)})}drawHistogram(t,i,s,e,o,a){t.forEach((t,l)=>{const r=.7*i,c=s.x+n(this.dataViewport.startIndex+l,this.dataViewport.startIndex,this.dataViewport.visibleCount,s.width,i)+(i-r)/2,d=h(0,e,o,s.height,s.y),u=h(t.value,e,o,s.height,s.y)-d;this.ctx.fillStyle=t.value>=0?a.style?.positiveColor||this.currentTheme.positiveColor:a.style?.negativeColor||this.currentTheme.negativeColor,this.ctx.fillRect(c,d,r,u)})}drawSignals(t,i,s,e,o){this.ctx.imageSmoothingEnabled=!1;const a={};t.filter(t=>null!=t.value).forEach((t,l)=>{const r=function(t){switch(t){case"support":return"rgba(0, 255, 0, 0.75)";case"resistance":return"rgba(255, 0, 0, 0.75)";case"uptrend":return"rgba(0, 255, 255, 0.75)";case"downtrend":return"rgba(255, 165, 0, 0.75)";default:return"rgba(0, 0, 0, 0.75)"}}(t.value.type);if(a[r]||(a[r]=new Path2D),null!=t.value.value){const c=Math.floor(i.x+n(this.dataViewport.startIndex+l,this.dataViewport.startIndex,this.dataViewport.visibleCount,i.width,s)),d=Math.floor(h(t.value.value,e,o,i.height,i.y));a[r].rect(c,d,Math.ceil(s),10)}}),Object.keys(a).forEach(t=>{this.ctx.fillStyle=t,this.ctx.fill(a[t])})}handleMouseDown(t){const i=this.canvas.getBoundingClientRect(),s=t.clientX-i.left,e=t.clientY-i.top;if(this.activeDrawingTool){const t=this.plotLayoutManager.getPlotLayout("main");return void(t&&s>=t.x&&s<=t.x+t.width&&e>=t.y&&e<=t.y+t.height&&this.drawingPanel.startDrawing(this.activeDrawingTool,s,e))}if(!this.drawingPanel.isChartFrozen){for(const i of this.options.plots){if(i.overlay)continue;const n=this.plotLayoutManager.getPlotLayout(i.id);if(n){const h={x:n.x+n.width,y:n.y,width:50,height:n.height};if(s>=h.x&&s<=h.x+h.width&&e>=h.y&&e<=h.y+h.height)return this.isDraggingYAxis=!0,this.resizingPlotId=i.id,void(this.lastMouseY=t.clientY)}}for(let i=0;i<this.options.plots.length-1;i++){const s=this.options.plots[i];if(!s.overlay){const i=this.plotLayoutManager.getPlotLayout(s.id),n=i.y+i.height;if(Math.abs(e-n)<this.resizeHandleHeight)return this.isResizingPlot=!0,this.resizingPlotId=s.id,void(this.lastMouseY=t.clientY)}}this.isDragging=!0,this.lastMouseX=t.clientX}}handleMouseMove(t){const i=this.canvas.getBoundingClientRect(),s=t.clientX-i.left,e=t.clientY-i.top;if(this.drawingPanel.isDrawing){const i=new MouseEvent("mousemove",{clientX:t.clientX,clientY:t.clientY});return this.drawingPanel.continueDrawing(i),void this.render()}const h=this.plotLayoutManager.getPlotLayout("main");if(h){const t=h.width/this.dataViewport.visibleCount,i=s-h.x,e=Math.round(i/t-.5),o=Math.max(0,Math.min(this.dataViewport.visibleCount-1,e)),a=h.x+n(this.dataViewport.startIndex+o,this.dataViewport.startIndex,this.dataViewport.visibleCount,h.width,t);this.crosshairX=a+t/2}if(this.crosshairY=e,this.isDraggingYAxis&&this.resizingPlotId){const i=t.clientY-this.lastMouseY;this.lastMouseY=t.clientY;let s=this.plotScales.get(this.resizingPlotId)||1;return s*=Math.exp(.01*-i),s=Math.max(.1,Math.min(10,s)),this.plotScales.set(this.resizingPlotId,s),void this.render()}if(this.isResizingPlot){const i=t.clientY-this.lastMouseY;this.lastMouseY=t.clientY;const s=this.options.plots.findIndex(t=>t.id===this.resizingPlotId);let e=s+1;for(;e<this.options.plots.length&&this.options.plots[e].overlay;)e++;if(s>=0&&e<this.options.plots.length){const t=this.options.plots[s],n=this.options.plots[e],h=t.heightRatio+n.heightRatio,o=i/(this.plotLayoutManager.getPlotLayout(t.id).height/t.heightRatio),a=.1*h,l=Math.max(a,Math.min(h-a,t.heightRatio+o));t.heightRatio=l,n.heightRatio=h-l,this.resize(),this.render()}}else if(this.isDragging){const i=t.clientX-this.lastMouseX,s=this.plotLayoutManager.getPlotLayout("main"),e=s?s.width/this.dataViewport.visibleCount:this.canvas.width/this.dataViewport.visibleCount,n=Math.round(i/e);0!==n&&(this.dataViewport.scroll(-n),this.lastMouseX=t.clientX,this.render())}else{let t=!1;const i=this.plotLayoutManager.yAxisWidth||this.calculateYAxisWidth();for(const n of this.options.plots){if(n.overlay)continue;const h=this.plotLayoutManager.getPlotLayout(n.id);if(h){const o=h.y+h.height;if(Math.abs(this.crosshairY-o)<this.resizeHandleHeight){this.canvas.style.cursor="row-resize",t=!0;break}const a={x:h.x+h.width,y:h.y,width:i,height:h.height};if(s>=a.x&&s<=a.x+a.width&&e>=a.y&&e<=a.y+a.height&&"main"===n.id){this.canvas.style.cursor="ns-resize",t=!0;break}}}t||(this.canvas.style.cursor="default"),this.render()}}handleMouseUp(t){if(this.drawingPanel.isDrawing){this.drawingPanel.completeDrawing(),this.setDrawingTool(null);const t=this.toolbar.querySelector('button[title="Select Tool"]');return t&&(t.style.backgroundColor=this.currentTheme?.gridColor||"#e0e0e0",this.toolbar.querySelectorAll("button").forEach(i=>{i!==t&&(i.style.backgroundColor="transparent")})),void this.render()}if(this.isDragging=!1,this.isResizingPlot=!1,this.isDraggingYAxis=!1,this.resizingPlotId=null,this.canvas.style.cursor="default",t&&2===t.detail){const i=this.canvas.getBoundingClientRect(),s=t.clientX-i.left,e=t.clientY-i.top;for(const t of this.options.plots){if(t.overlay)continue;const i=this.plotLayoutManager.getPlotLayout(t.id);if(i){const n={x:i.x+i.width,y:i.y,width:50,height:i.height};if(s>=n.x&&s<=n.x+n.width&&e>=n.y&&e<=n.y+n.height){this.plotScales.delete(t.id),this.render();break}}}}}handleMouseOut(){this.isDragging=!1,this.crosshairX=-1,this.crosshairY=-1,this.render()}handleMouseWheel(t){if(t.preventDefault(),this.drawingPanel.isChartFrozen)return;const i=this.canvas.getBoundingClientRect();t.clientX,i.left;const s=t.clientY-i.top;if(t.ctrlKey){const i=t.deltaY<0?1.1:1/1.1,e=this.plotLayoutManager.getPlotLayout("main");if(e){const t=this.maxPrice-this.minPrice,n=t/i,h=this.minPrice+(this.maxPrice-this.minPrice)*((e.y+e.height-s)/e.height);this.minPrice=h-n*((h-this.minPrice)/t),this.maxPrice=h+n*((this.maxPrice-h)/t)}this.render()}else{const i=t.deltaY<0?1.1:.901,s=Math.floor(this.crosshairX/(this.canvas.width/this.dataViewport.visibleCount));this.dataViewport.zoom(i,s),this.render()}}lastTapTime=0;lastTapX=0;lastTapY=0;touchHoldTimer=null;isCrosshairMode=!1;touchStartX=0;touchStartY=0;handleTouchStart(t){t.preventDefault();const i=this.canvas.getBoundingClientRect();if(this.touchHoldTimer&&(clearTimeout(this.touchHoldTimer),this.touchHoldTimer=null),!this.drawingPanel.isChartFrozen)if(t.touches.length!==this.lastTouchCount&&(this.isPinching=!1,this.isDragging=!1,this.isResizingPlot=!1,this.isDraggingYAxis=!1,this.isCrosshairMode=!1,this.initialPinchDistance=0),this.lastTouchCount=t.touches.length,2===t.touches.length){const s=t.touches[0],e=t.touches[1],n=s.clientX-i.left,h=s.clientY-i.top,o=e.clientX-i.left,a=e.clientY-i.top,l=Math.sqrt(Math.pow(o-n,2)+Math.pow(a-h,2));l>30&&(this.isPinching=!0,this.initialPinchDistance=l,this.pinchCenterX=(n+o)/2,this.pinchCenterY=(h+a)/2,this.lastPinchDistance=l),this.initialPinchDistance=Math.sqrt(Math.pow(o-n,2)+Math.pow(a-h,2)),this.pinchCenterX=(n+o)/2,this.pinchCenterY=(h+a)/2}else if(1===t.touches.length){const s=t.touches[0],e=s.clientX-i.left,h=s.clientY-i.top;this.initialTouchX=e,this.initialTouchY=h,this.lastTouchX=e,this.lastTouchY=h;for(const t of this.options.plots){if(t.overlay)continue;const i=this.plotLayoutManager.getPlotLayout(t.id);if(i){const s={x:i.x+i.width,y:i.y,width:50,height:i.height};if(e>=s.x&&e<=s.x+s.width&&h>=s.y&&h<=s.y+s.height){const i=(new Date).getTime(),s=i-this.lastTapTime,n=Math.sqrt(Math.pow(e-this.lastTapX,2)+Math.pow(h-this.lastTapY,2));return s<300&&n<30?(this.plotScales.delete(t.id),this.render(),void(this.lastTapTime=0)):(this.lastTapTime=i,this.lastTapX=e,this.lastTapY=h,this.isDraggingYAxis=!0,this.resizingPlotId=t.id,void(this.lastTouchY=h))}}}for(let t=0;t<this.options.plots.length-1;t++){const i=this.options.plots[t];if(!i.overlay){const t=this.plotLayoutManager.getPlotLayout(i.id),s=t.y+t.height;if(Math.abs(h-s)<this.resizeHandleHeight)return this.isResizingPlot=!0,this.resizingPlotId=i.id,void(this.lastTouchY=h)}}this.isDragging=!0,this.lastTouchX=e,this.lastTouchY=h,this.crosshairX=-1,this.crosshairY=-1,this.touchHoldTimer=setTimeout(()=>{if(this.isDragging){this.isCrosshairMode=!0;const t=this.plotLayoutManager.getPlotLayout("main");if(t){const i=t.width/this.dataViewport.visibleCount,s=e-t.x,o=Math.round(s/i-.5),a=Math.max(0,Math.min(this.dataViewport.visibleCount-1,o)),l=t.x+n(this.dataViewport.startIndex+a,this.dataViewport.startIndex,this.dataViewport.visibleCount,t.width,i);this.crosshairX=l+i/2,this.crosshairY=h}this.render()}},1e3)}}handleTouchMove(t){if(t.preventDefault(),this.drawingPanel.isChartFrozen)return;const i=this.canvas.getBoundingClientRect();if(2===t.touches.length&&this.isPinching){const s=t.touches[0],e=t.touches[1],n=s.clientX-i.left,h=s.clientY-i.top,o=e.clientX-i.left,a=e.clientY-i.top,l=Math.sqrt(Math.pow(o-n,2)+Math.pow(a-h,2));if(this.initialPinchDistance>10&&l>10){const t=l/this.initialPinchDistance,i=(n+o)/2,s=(h+a)/2,e=.3,r=this.pinchCenterX?this.pinchCenterX*(1-e)+i*e:i,c=this.pinchCenterY?this.pinchCenterY*(1-e)+s*e:s;let d=null;for(const t of this.options.plots){if(t.overlay)continue;const i=this.plotLayoutManager.getPlotLayout(t.id);if(i&&c>=i.y&&c<=i.y+i.height){d=t.id;break}}if(d){const i=Math.abs(c-this.pinchCenterY),s=Math.abs(r-this.pinchCenterX),e=.002,n=Math.abs(t-1);if(n>e){const e=1+(t-1)*Math.min(.3,.5*n);if(i>1.2*s){let t=this.plotScales.get(d)||1;t*=Math.exp(.3*(e-1)),t=Math.max(.1,Math.min(10,t)),this.plotScales.set(d,t)}else{const t=.02,i=Math.exp((e-1)*t),s=this.plotLayoutManager.getPlotLayout(d),n=Math.floor((r-s.x)/(s.width/this.dataViewport.visibleCount));this.dataViewport.zoom(i>1?1.03:.97,n)}}}this.pinchCenterX=r,this.pinchCenterY=c,this.initialPinchDistance=l,this.render()}}else if(1===t.touches.length){const s=t.touches[0],e=s.clientX-i.left,h=s.clientY-i.top,o=this.plotLayoutManager.getPlotLayout("main");if(o){const t=o.width/this.dataViewport.visibleCount;if(this.isCrosshairMode){const i=e-o.x,s=Math.round(i/t-.5),a=Math.max(0,Math.min(this.dataViewport.visibleCount-1,s)),l=o.x+n(this.dataViewport.startIndex+a,this.dataViewport.startIndex,this.dataViewport.visibleCount,o.width,t);this.crosshairX=l+t/2,this.crosshairY=h}else if(this.isDragging){const t=Math.abs(e-this.initialTouchX),i=Math.abs(h-this.initialTouchY);Math.sqrt(t*t+i*i)>10&&this.touchHoldTimer&&(clearTimeout(this.touchHoldTimer),this.touchHoldTimer=null,this.isCrosshairMode=!1,this.crosshairX=-1,this.crosshairY=-1)}}if(this.isDraggingYAxis&&this.resizingPlotId){const t=h-this.lastTouchY;this.lastTouchY=h;let i=this.plotScales.get(this.resizingPlotId)||1;i*=Math.exp(.01*-t),i=Math.max(.1,Math.min(10,i)),this.plotScales.set(this.resizingPlotId,i),this.render()}else if(this.isResizingPlot&&this.resizingPlotId){const t=h-this.lastTouchY;this.lastTouchY=h;const i=this.options.plots.findIndex(t=>t.id===this.resizingPlotId);let s=i+1;for(;s<this.options.plots.length&&this.options.plots[s].overlay;)s++;if(i>=0&&s<this.options.plots.length){const e=this.options.plots[i],n=this.options.plots[s],h=e.heightRatio+n.heightRatio,o=t/(this.plotLayoutManager.getPlotLayout(e.id).height/e.heightRatio),a=.1*h,l=Math.max(a,Math.min(h-a,e.heightRatio+o));e.heightRatio=l,n.heightRatio=h-l,this.resize(),this.render()}}else if(this.isDragging){const t=e-this.lastTouchX,i=this.plotLayoutManager.getPlotLayout("main"),s=i?i.width/this.dataViewport.visibleCount:this.canvas.width/this.dataViewport.visibleCount,o=Math.round(t/s);if(this.isCrosshairMode){const t=this.plotLayoutManager.getPlotLayout("main");if(t){const i=t.width/this.dataViewport.visibleCount,s=e-t.x,o=Math.round(s/i-.5),a=Math.max(0,Math.min(this.dataViewport.visibleCount-1,o)),l=t.x+n(this.dataViewport.startIndex+a,this.dataViewport.startIndex,this.dataViewport.visibleCount,t.width,i);this.crosshairX=l+i/2,this.crosshairY=h,this.render()}}else 0!==o&&(this.dataViewport.scroll(-o),this.lastTouchX=e,this.render())}}}handleTouchEnd(t){t.preventDefault(),this.touchHoldTimer&&(clearTimeout(this.touchHoldTimer),this.touchHoldTimer=null);const i=this.lastTouchCount;if(this.lastTouchCount=t.touches.length,2===i&&1===t.touches.length){this.isPinching=!1,this.initialPinchDistance=0,this.lastPinchDistance=0;const i=t.touches[0],s=this.canvas.getBoundingClientRect();this.lastTouchX=i.clientX-s.left,this.lastTouchY=i.clientY-s.top,this.isDragging=!0}else 0===t.touches.length&&(this.isDragging=!1,this.isResizingPlot=!1,this.isDraggingYAxis=!1,this.resizingPlotId=null,this.isPinching=!1,this.initialPinchDistance=0,this.lastPinchDistance=0,this.isCrosshairMode||(this.crosshairX=-1,this.crosshairY=-1),this.isCrosshairMode=!1);this.render()}drawChartName(){const{chartName:t}=this.options;if(!t)return;const{name:i,code:s,metaString:e}=t,{textColor:n}=this.currentTheme,h=this.canvas.width<600?10:14;let o=20;this.ctx.fillStyle=n,this.ctx.textAlign="left",i&&(this.ctx.font=`bold ${h+2}px Arial`,this.ctx.fillText(i,10,o),o+=h+4),s&&(this.ctx.font=`${h}px Arial`,this.ctx.fillText(s,10,o),o+=h+2),e&&(this.ctx.font=`italic ${h-1}px Arial`,this.ctx.fillText(e,10,o))}drawXAxisLabels(){const t=this.dataViewport.getVisibleData();if(0===t.length)return;const i=this.plotLayoutManager.getPlotLayout("main");if(!i)return;const s=i.width,e=Math.max(10,Math.min(12,Math.floor(s/50))),h=8*e,o=Math.floor(s/h),a=o>10?10:o,l=Math.max(1,Math.floor(t.length/a));this.ctx.fillStyle=this.currentTheme.textColor,this.ctx.font=`${e}px Arial`,this.ctx.textAlign="center";const r=this.canvas.height-e,c=new Date(1e3*t[0].time),d=new Date(1e3*t[t.length-1].time);c.getTime(),d.getTime();const u=i.width/this.dataViewport.visibleCount;for(let s=t.length-1;s>=0;s-=l){const e=t[s];if(!e||!e.time)continue;const h=n(this.dataViewport.startIndex+s,this.dataViewport.startIndex,this.dataViewport.visibleCount,i.width,u),o=new Date(1e3*e.time).toLocaleDateString(void 0,{year:"numeric",month:"numeric",day:"numeric"}),a=i.x+h+u/2;a>=i.x&&a<=i.x+i.width&&this.ctx.fillText(o,a,r)}}drawYAxisLabels(t,i,s,e){this.ctx.fillStyle=this.currentTheme.textColor;const n=this.canvas.width<600?10:12;this.ctx.font=`${n}px Arial`,this.ctx.textAlign="left",this.ctx.textBaseline="middle";const o=n+4,a=Math.max(3,Math.min(8,Math.floor(i.height/o))),l=Math.min(5,a),r=(e-s)/l,c=[];for(let t=0;t<=l;t++){const n=s+t*r,o=h(n,s,e,i.height,i.y);c.push({price:n,y:o})}const d=c.filter(({y:t})=>{const s=1.5*n;return t>=i.y+s&&t<=i.y+i.height-s});let u=d;if(d.length<2&&c.length>=2){const t=c[0],s=c[c.length-1];u=[{...t,y:Math.max(i.y+n,t.y)},{...s,y:Math.min(i.y+i.height-n,s.y)}]}u.forEach(({price:s,y:e})=>{let n;this.ctx.beginPath(),this.ctx.strokeStyle=this.currentTheme.gridColor,this.ctx.setLineDash([2,2]),this.ctx.moveTo(i.x,e),this.ctx.lineTo(i.x+i.width,e),this.ctx.stroke(),this.ctx.setLineDash([]),n="volume"===t.type?s>=1e6?(s/1e6).toFixed(1)+"M":s>=1e3?(s/1e3).toFixed(1)+"K":Math.round(s).toLocaleString():s>=1e3?s.toFixed(0):s>=100?s.toFixed(1):s>=10?s.toFixed(2):s.toFixed(3);const h=i.x+i.width+4;this.ctx.fillText(n,h,Math.round(e))}),this.ctx.textBaseline="alphabetic",this.ctx.beginPath(),this.ctx.strokeStyle=this.currentTheme.gridColor,this.ctx.lineWidth=1,this.ctx.moveTo(i.x+i.width,i.y),this.ctx.lineTo(i.x+i.width,i.y+i.height),this.ctx.stroke()}drawArrowLines(t,i,s,e,o){const a=new Map,l=t.flat();l.filter(t=>t).forEach(t=>{t&&t.id&&(a.has(t.id)||a.set(t.id,[]),a.get(t.id).push(t))});const r=l.find(t=>t),c=[...l].reverse().find(t=>t),d=r?r.time:0,u=c?c.time:0;a.forEach(t=>{if(t.length<2)return;let a=t[0],l=t[t.length-1];if(a.time<d){const i=t.find(t=>t.time>=d);i&&(a=i)}if(l.time>u){const i=[...t].reverse().find(t=>t.time<=u);i&&(l=i)}const r=this.findTimeIndex(a.time,this.dataViewport.allData),c=i.x+n(r,this.dataViewport.startIndex,this.dataViewport.visibleCount,i.width,s)+s/2,f=h(a.value,e,o,i.height,i.y),p=this.findTimeIndex(l.time,this.dataViewport.allData),m=i.x+n(p,this.dataViewport.startIndex,this.dataViewport.visibleCount,i.width,s)+s/2,b=h(l.value,e,o,i.height,i.y);a.isPrediction&&this.ctx.setLineDash([5,5]);const g=m-c,y=b-f,v=Math.atan2(y,g);this.ctx.beginPath(),this.ctx.strokeStyle=this.currentTheme.textColor,this.ctx.lineWidth=1.5,this.ctx.moveTo(c,f),this.ctx.lineTo(m,b),this.ctx.stroke(),this.ctx.setLineDash([]),this.ctx.beginPath(),this.ctx.moveTo(m,b),this.ctx.lineTo(m-10*Math.cos(v-Math.PI/6),b-10*Math.sin(v-Math.PI/6)),this.ctx.lineTo(m,b),this.ctx.lineTo(m-10*Math.cos(v+Math.PI/6),b-10*Math.sin(v+Math.PI/6)),this.ctx.stroke()})}findTimeIndex(t,i){let s=0,e=i.length-1;for(;s<=e;){const n=Math.floor((s+e)/2);if(i[n].time===t)return n;i[n].time<t?s=n+1:e=n-1}return e>=0&&s<i.length?Math.abs(i[s]?.time-t)<Math.abs(i[e]?.time-t)?s:e:e>=0?e:0}displayInfoOverlay(){const t=this.dataViewport.getVisibleData();if(0===t.length)return;const i=this.plotLayoutManager.getPlotLayout("main");if(!i)return;const s=i.width/this.dataViewport.visibleCount,e=this.crosshairX-i.x,n=Math.max(0,Math.floor(e/s));let h=this.dataViewport.startIndex+n;this.options.plots.forEach(i=>{const s=this.plotLayoutManager.getPlotLayout(i.id);if(!s||i.overlay)return;const e=i.data&&i.data.length>0?i.data:t;if(h>=0&&h<e.length){this.crosshairY<0&&(h=e.length-1);const c=e[h];if(this.ctx.fillStyle=this.currentTheme.overlayTextColor,this.ctx.font="12px Arial",this.crosshairY>=s.y&&this.crosshairY<=s.y+s.height){const{minPrice:e,maxPrice:h}=this.calculatePriceRange(i,t,this.dataViewport),c=(n=this.crosshairY,o=s.y,l=e,r=h,0===(a=s.height)?(r+l)/2:l+(1-(n-o)/a)*(r-l));let d;d="volume"===i.type?c>=1e6?(c/1e6).toFixed(2)+"M":c>=1e3?(c/1e3).toFixed(2)+"K":Math.round(c).toString():c>=1e3?c.toFixed(0):c>=100?c.toFixed(1):c>=10?c.toFixed(2):c.toFixed(3),this.ctx.textAlign="left",this.ctx.textBaseline="middle";const u=this.plotLayoutManager.getPlotTotalWidth()+5;this.ctx.fillText(d,u,Math.round(this.crosshairY))}if("main"===i.id&&void 0!==c.time){const t=new Date(1e3*c.time).toLocaleDateString(void 0,{year:"numeric",month:"numeric",day:"numeric"});this.ctx.textAlign="center",this.ctx.textBaseline="middle";const i=this.plotLayoutManager.getPlotTotalHeight()+15;this.ctx.fillText(t,this.crosshairX,i)}const d=this.options.plots.filter(t=>t.targetId===i.id||t.id===i.id).reduce((t,i)=>{if("main"===i.id){const s=i.keyLabel||"";t[s]||(t[s]=[]),t[s].push(i)}else if(i.targetId&&"main"===i.targetId){const s=i.keyLabel||"";t[s]||(t[s]=[]),t[s].push(i)}else{const s=i.targetId||i.id;t[s]||(t[s]=[]),t[s].push(i)}return t},{}),u=[];Object.entries(d).forEach(([i,s])=>{const e=[];if(s.forEach(i=>{const s="main"===i.id,n=i.data&&i.data.length>0?i.data:t;if(h>=0&&h<n.length){const t=n[h],o=Object.entries(t).map(([t,e])=>{if(!s&&("time"===t||"date"===t||"keyLabel"===t))return null;if(s&&!this.eligibleMainPlotKeys.includes(t))return null;let n="";if("time"===t&&s)return n=new Date(1e3*e).toLocaleDateString(void 0,{year:"numeric",month:"numeric",day:"numeric"}),`${n}`;if("number"==typeof e)n=e.toFixed(2);else if("object"==typeof e){if(!e.value)return null;n=e.value?.toFixed(2)}else n=e;return i.keyLabel?.trim().length>0?i.keyLabel:(t.charAt(0).toUpperCase(),t.slice(1)),`${n}`}).filter(Boolean);o.length>0&&e.push(...o)}}),e.length>0){let t="main"!==i?`${i.toUpperCase()}: `:"";t=":"===t.trim()?"":t,u.push(`${t}${e.join(" | ")}`)}});const f=15,p=10,m=s.x+s.width-p;this.ctx.textAlign="right",u.forEach((t,i)=>{const e=s.y+(i+1)*f;this.ctx.fillText(t,m,e)}),this.ctx.textAlign="left",this.ctx.textBaseline="alphabetic"}var n,o,a,l,r})}renderOverlayPanels(){this.ctx.save(),this.ctx.fillStyle="rgba(0,0,0,0.3)",this.ctx.font="10px Arial",this.ctx.fillText("Overlay panels reserved for indicators",10,this.canvas.height-10),this.ctx.restore()}updateStockData(t){if(!Array.isArray(t))return;const i=t.find(t=>"main"===t.id);i&&(this.dataViewport=new e(i.data,this.options.initialVisibleCandles,5),this.drawingPanel.clearDrawings()),this.options.plots.length=0,this.options.plots=t;const s=this.calculateYAxisWidth();this.plotLayoutManager.updateCanvasDimensions(this.canvas.width,this.canvas.height,s),this.plotLayoutManager.updatePlotConfigurations(this.options.plots),this.loadIndicatorSettings()}updateChartName(t){this.options.chartName=t,this.render()}ensureContainerSize(t){const i=window.innerWidth<=768,s=t.parentElement,e=t.clientHeight<1,n=t.clientWidth<1;(e||n)&&(s&&s.clientHeight>1&&s.clientWidth>1&&(e||n)?(t.style.height=`${s.clientHeight}px`,t.style.width=`${s.clientWidth}px`):(e&&(t.style.height=i?`${window.innerHeight}px`:.9*window.innerHeight+"px"),n&&(t.style.width=i?`${window.innerWidth}px`:.9*window.innerWidth+"px")))}setDrawingTool(t){this.activeDrawingTool=t,this.drawingPanel.setActiveTool(t),this.canvas.style.cursor=t?"crosshair":"default",this.toolbar&&this.toolbar.querySelectorAll("button").forEach(i=>{const s="Select Tool"===i.title;i.style.backgroundColor=null===t?s?this.currentTheme?.gridColor||"#e0e0e0":"transparent":i.title?.toLowerCase().includes(t.toLowerCase())?this.currentTheme?.gridColor||"#e0e0e0":"transparent"})}clearDrawings(){this.drawingPanel.clearDrawings(),this.render()}importDrawings(t){this.drawingPanel.importDrawings(t),this.render()}exportDrawings(){return this.drawingPanel.exportDrawings()}centerOnDate(t,i={}){if(!t||"number"!=typeof t)return;const s=Math.floor(t/1e3);let e=this.dataViewport.allData.findIndex(t=>t.time===s);if(-1===e){const t=1;e=this.dataViewport.allData.findIndex(i=>Math.abs(i.time-s)<=t)}if(-1===e){const t=this.dataViewport.allData.reduce((t,i)=>Math.abs(i.time-s)<Math.abs(t.time-s)?i:t);e=this.dataViewport.allData.indexOf(t)}let h=e-Math.floor(this.dataViewport.visibleCount/2);if(h<0?h=0:h+this.dataViewport.visibleCount>=this.dataViewport.allData.length&&(h=this.dataViewport.allData.length-this.dataViewport.visibleCount),this.dataViewport.startIndex=h,!1!==i.drawLine){const t=this.plotLayoutManager.getPlotLayout("main");if(t){const s=t.width/this.dataViewport.visibleCount;this.dataViewport.startIndex;const h=t.x+n(e,this.dataViewport.startIndex,this.dataViewport.visibleCount,t.width,s)+s/2;this.render(),this.drawVerticalLine({x:h,color:i.lineColor||this.currentTheme.textColor,width:i.lineWidth||1})}}}drawVerticalLine({x:t,color:i,width:s}){this.ctx.beginPath(),this.ctx.strokeStyle=i,this.ctx.lineWidth=s,this.ctx.moveTo(t,0),this.ctx.lineTo(t,this.plotLayoutManager.getPlotTotalHeight()),this.ctx.stroke()}}return x});//# sourceMappingURL=stock-chart.umd.min.js.map
